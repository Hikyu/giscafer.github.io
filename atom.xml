<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Giscafer's blog]]></title>
  <subtitle><![CDATA[Day Day Study，Good Good Up]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://giscafer.com/"/>
  <updated>2016-01-16T18:13:35.876Z</updated>
  <id>http://giscafer.com/</id>
  
  <author>
    <name><![CDATA[giscafer]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[NodeJS实现阿里大鱼短信通知发送]]></title>
    <link href="http://giscafer.com/2016/01/16/alidayu-sign-nodejs/"/>
    <id>http://giscafer.com/2016/01/16/alidayu-sign-nodejs/</id>
    <published>2016-01-16T02:49:20.000Z</published>
    <updated>2016-01-16T18:13:35.876Z</updated>
    <content type="html"><![CDATA[<h3 id="1、说明">1、说明</h3><p>阿里大鱼提供了验证码，短信通知，语音等服务，在使用后感觉挺方便，不愧是阿里旗下的产品。</p>
<p>最近想搞个NodeJS发送短信通知的功能，这里没有使用<code>alidayu-node</code>（开始做的时候并不知道有这个。如果使用alidayu-node那就简单了。），自己整一个签名sign，实现短信发送。</p>
<a id="more"></a>
<p>官方的<a href="http://open.taobao.com/doc2/detail.htm?articleId=101617&amp;docType=1&amp;treeId=1" target="_blank" rel="external">文档</a>说明了签名<code>sign</code>的生成步骤，不过第三步骤:</p>
<blockquote>
<p>3、连接字符串 连接参数名与参数值,并在首尾加上secret</p>
</blockquote>
<p>如果使用hmac方式加密（sign_method: ‘hmac’），则不需要<code>首尾加上secret</code>，md5则需要</p>
<h3 id="2、代码实现">2、代码实现</h3><p><strong>生成<code>sign</code></strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span><br><span class="line"> * 根据淘宝官网提供的教程</span><br><span class="line"> * http://open.taobao.com/doc2/detail.htm?articleId=101617&amp;docType=1&amp;treeId=1</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">var</span> md5 = <span class="built_in">require</span>(<span class="string">"blueimp-md5"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 淘宝应用App信息(换成自己的)</span></span><br><span class="line"><span class="keyword">var</span> config = &#123;</span><br><span class="line">    AppKey: <span class="string">'233002**'</span>,</span><br><span class="line">    AppSecret: <span class="string">'3403636b338e100399**'</span></span><br><span class="line">&#125;;</span><br><span class="line">exports.config=config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dySign = <span class="function"><span class="keyword">function</span> (<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 生成时间戳</span></span><br><span class="line">    <span class="keyword">var</span> time = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">var</span> timestamp = time.getFullYear()  + <span class="string">"-"</span> +</span><br><span class="line">        (<span class="string">"0"</span> + (time.getMonth() + <span class="number">1</span>)).slice(-<span class="number">2</span>) + <span class="string">"-"</span> +</span><br><span class="line">        (<span class="string">"0"</span> + time.getDate()).slice(-<span class="number">2</span>) + <span class="string">' '</span>  +</span><br><span class="line">        (<span class="string">"0"</span> + time.getHours()).slice(-<span class="number">2</span>)   + <span class="string">":"</span> +</span><br><span class="line">        (<span class="string">"0"</span> + time.getMinutes()).slice(-<span class="number">2</span>) + <span class="string">":"</span> +</span><br><span class="line">        (<span class="string">"0"</span> + time.getSeconds()).slice(-<span class="number">2</span>);</span><br><span class="line">    obj.timestamp = timestamp;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 程序key</span></span><br><span class="line">    obj.app_key = config.AppKey;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 参数数组</span></span><br><span class="line">    <span class="keyword">var</span> arr = [];</span><br><span class="line">    <span class="comment">// 循环添加参数项</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> p <span class="keyword">in</span> obj)&#123;</span><br><span class="line">        arr.push(p + obj[p]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 2、按首字母升序排列</span></span><br><span class="line">    arr.sort();</span><br><span class="line">    <span class="comment">// 3、连接字符串</span></span><br><span class="line">    <span class="keyword">var</span> msg =  arr.join(<span class="string">''</span>);</span><br><span class="line">    <span class="comment">// console.log(msg);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成签名 sign hmac</span></span><br><span class="line">    <span class="keyword">var</span> sign = md5(msg, config.AppSecret);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回</span></span><br><span class="line">    <span class="keyword">return</span> sign.toUpperCase();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports.dySign = dySign;</span><br></pre></td></tr></table></figure></p>
<p><strong>拼接字符串并发送请求</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> signGenerate = <span class="built_in">require</span>(<span class="string">'./create_dysign'</span>);</span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">var</span> qs = <span class="built_in">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> alidayuUrl = <span class="string">'http://gw.api.taobao.com/router/rest'</span>;</span><br><span class="line"><span class="comment">// 短信发送的参数对象</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    format: <span class="string">'json'</span>,</span><br><span class="line">    method: <span class="string">'alibaba.aliqin.fc.sms.num.send'</span>,</span><br><span class="line">    v: <span class="string">'2.0'</span>,</span><br><span class="line">    timestamp: <span class="string">'2016-1-16 02:33:30'</span>,</span><br><span class="line">    partner_id: <span class="string">'top-sdk-nodejs-20160116'</span>,</span><br><span class="line">    rec_num: <span class="string">'15110****'</span>, <span class="comment">//手机号多个以逗号间隔</span></span><br><span class="line">    sign_method: <span class="string">'hmac'</span>,</span><br><span class="line">    sms_type: <span class="string">'normal'</span>,</span><br><span class="line">    sms_param: <span class="string">'&#123;"code":"giscafer","product":"alidayu短信测试"&#125;'</span>,</span><br><span class="line">    sms_free_sign_name: <span class="string">'身份验证'</span>,</span><br><span class="line">    sms_template_code: <span class="string">'SMS_4725038'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//生成签名并拼接请求参数链接</span></span><br><span class="line"><span class="keyword">var</span> sign = signGenerate.dySign(obj);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'签名：'</span>, sign);</span><br><span class="line"></span><br><span class="line">obj.sign = sign;</span><br><span class="line">obj.app_key = signGenerate.config.AppKey;</span><br><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> p <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    arr.push(p + <span class="string">'='</span> + obj[p]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> msg = arr.join(<span class="string">'&amp;'</span>)</span><br><span class="line"><span class="keyword">var</span> sendurl = alidayuUrl + <span class="string">'?'</span> + msg;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'完成请求地址：'</span> + sendurl);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 短信发送请求测试</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">var</span> params = qs.stringify(obj);</span><br><span class="line"><span class="keyword">var</span> options = &#123;</span><br><span class="line">    hostname: <span class="string">'gw.api.taobao.com'</span>,</span><br><span class="line">    port: <span class="number">80</span>,</span><br><span class="line">    path: <span class="string">'/router/rest?'</span> + params,</span><br><span class="line">    method: <span class="string">'GET'</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> req = http.request(options, <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'STATUS: '</span> + res.statusCode);</span><br><span class="line">    <span class="comment">// console.log('HEADERS: ' + JSON.stringify(res.headers));</span></span><br><span class="line">    <span class="comment">// console.log(req.path);</span></span><br><span class="line">    res.setEncoding(<span class="string">'utf8'</span>);</span><br><span class="line">    res.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">chunk</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'RESULT: '</span> + chunk);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">req.on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'ERROR: '</span> + e.message);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// write data to request body</span></span><br><span class="line">req.write(<span class="string">"执行完毕！"</span>);</span><br><span class="line"></span><br><span class="line">req.end();</span><br></pre></td></tr></table></figure>
<p><strong>请求结果</strong></p>
<pre><code>{"<span class="attribute">alibaba_aliqin_fc_sms_num_send_response</span>":<span class="value">{"<span class="attribute">result</span>":<span class="value">{"<span class="attribute">err_code</span>":<span class="value"><span class="string">"0"</span></span>,"<span class="attribute">model</span>":<span class="value"><span class="string">"100545278271^1100912293896"</span></span>,"<span class="attribute">success</span>":<span class="value"><span class="literal">true</span></span>}</span>,"<span class="attribute">request_id</span>":<span class="value"><span class="string">"15q8um2g8w8ef"</span></span>}</span>}
</code></pre><p><img src="https://github.com/giscafer/alidayu-sign-nodejs/raw/master/images/screenshot.png" alt="此处输入图片的描述"></p>
<p><strong>源码demo</strong>——》<a href="https://github.com/giscafer/alidayu-sign-nodejs" target="_blank" rel="external">Github</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、说明">1、说明</h3><p>阿里大鱼提供了验证码，短信通知，语音等服务，在使用后感觉挺方便，不愧是阿里旗下的产品。</p>
<p>最近想搞个NodeJS发送短信通知的功能，这里没有使用<code>alidayu-node</code>（开始做的时候并不知道有这个。如果使用alidayu-node那就简单了。），自己整一个签名sign，实现短信发送。</p>]]>
    
    </summary>
    
      <category term="NodeJS" scheme="http://giscafer.com/tags/NodeJS/"/>
    
      <category term="短信发送" scheme="http://giscafer.com/tags/%E7%9F%AD%E4%BF%A1%E5%8F%91%E9%80%81/"/>
    
      <category term="阿里大鱼" scheme="http://giscafer.com/tags/%E9%98%BF%E9%87%8C%E5%A4%A7%E9%B1%BC/"/>
    
      <category term="NodeJS" scheme="http://giscafer.com/categories/NodeJS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AMD构建（gulp插件amd-optimize的使用）]]></title>
    <link href="http://giscafer.com/2015/12/02/amd-optimize-gulp/"/>
    <id>http://giscafer.com/2015/12/02/amd-optimize-gulp/</id>
    <published>2015-12-02T12:11:16.000Z</published>
    <updated>2015-12-02T12:21:57.579Z</updated>
    <content type="html"><![CDATA[<p>这里所说的<code>AMD</code>构建，是指<code>AMD</code>定义模块方式的代码构建。AMD=异步定义模块，具体查看官方<a href="https://github.com/amdjs/amdjs-api" target="_blank" rel="external">AMD</a>解释。</p>
<p>首先，所谓构建就是将多个文件合并压缩等，但是对于<code>AMD</code>定义的模块来说，模块之间存在这依赖关系，<code>AMD</code>构建主要就是解决这种模块之间的依赖关系，构建的方式很多种，下边是gulp 的<code>amd-optimize</code>插件构建笔记。<br><a id="more"></a></p>
<h3 id="使用gulp对AMD模块构建">使用gulp对AMD模块构建</h3><p>需要三个插件 <code>gulp amd-optimize gulp-concat</code></p>
<pre><code>npm <span class="operator"><span class="keyword">install</span> gulp amd-<span class="keyword">optimize</span> gulp-<span class="keyword">concat</span> <span class="comment">--save-dev</span></span>
</code></pre><p>创建gulpfile.js文件，内容如下：</p>
<pre><code><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">"gulp"</span>);
<span class="keyword">var</span> amdOptimize = <span class="built_in">require</span>(<span class="string">"amd-optimize"</span>);
<span class="keyword">var</span> concat = <span class="built_in">require</span>(<span class="string">'gulp-concat'</span>);

gulp.task(<span class="string">"default"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{
  <span class="keyword">return</span> gulp.src(<span class="string">"app/**/*.js"</span>) <span class="comment">//需要合并的代码</span>
    .pipe(amdOptimize(<span class="string">"app"</span>))   <span class="comment">//主入口文件</span>
    .pipe(concat(<span class="string">"result.js"</span>))  <span class="comment">//合并后文件</span>
    .pipe(gulp.dest(<span class="string">"dist"</span>));  <span class="comment">//输出目录</span>

});
</code></pre><p>工程中，app/index/a.js代码：</p>
<pre><code>define(<span class="function"><span class="keyword">function</span>(<span class="params">require,exports,module</span>) </span>{
    <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>{
        <span class="built_in">console</span>.log(<span class="string">"this is the module a"</span>);
    }
    exports.fn=fn;
});
</code></pre><p>app/script/b.js代码：</p>
<pre><code>define(<span class="function"><span class="keyword">function</span>(<span class="params">require,exports,module</span>) </span>{
    <span class="keyword">var</span> a = <span class="built_in">require</span>(<span class="string">'../index/a'</span>);
    a.fn();
    <span class="built_in">console</span>.log(<span class="string">"i am module b"</span>);

    <span class="built_in">console</span>.log(<span class="string">"b has finished"</span>);
});
</code></pre><p>根目录下app.js入口文件内容：</p>
<pre><code>define([<span class="string">'script/b'</span>],<span class="function"><span class="keyword">function</span>(<span class="params">require,exports,module</span>)</span>{
    <span class="built_in">console</span>.log(<span class="string">" module c"</span>);

    <span class="built_in">console</span>.log(<span class="string">"c finished"</span>);
});
</code></pre><p>执行构建后，在dist下就会输出result.js文件代码如下</p>
<pre><code>  define(<span class="string">'index/a'</span>, [
    <span class="string">'require'</span>,
    <span class="string">'exports'</span>,
    <span class="string">'module'</span>
], <span class="function"><span class="keyword">function</span> (<span class="params">require, exports, module</span>) </span>{
    <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>{
        <span class="built_in">console</span>.log(<span class="string">'this is the module a'</span>);
    }
    exports.fn = fn;
});
define(<span class="string">'script/b'</span>, [
    <span class="string">'require'</span>,
    <span class="string">'exports'</span>,
    <span class="string">'module'</span>,
    <span class="string">'index/a'</span>
], <span class="function"><span class="keyword">function</span> (<span class="params">require, exports, module</span>) </span>{
    <span class="keyword">var</span> a = <span class="built_in">require</span>(<span class="string">'../index/a'</span>);
    a.fn();
    <span class="built_in">console</span>.log(<span class="string">'i am module b'</span>);
    <span class="built_in">console</span>.log(<span class="string">'b has finished'</span>);
});
define(<span class="string">'app'</span>, [<span class="string">'script/b'</span>], <span class="function"><span class="keyword">function</span> (<span class="params">require, exports, module</span>) </span>{
    <span class="built_in">console</span>.log(<span class="string">' module c'</span>);
    <span class="built_in">console</span>.log(<span class="string">'c finished'</span>);
});
</code></pre><p>可见，会解决package内部模块之间的项目依赖</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这里所说的<code>AMD</code>构建，是指<code>AMD</code>定义模块方式的代码构建。AMD=异步定义模块，具体查看官方<a href="https://github.com/amdjs/amdjs-api">AMD</a>解释。</p>
<p>首先，所谓构建就是将多个文件合并压缩等，但是对于<code>AMD</code>定义的模块来说，模块之间存在这依赖关系，<code>AMD</code>构建主要就是解决这种模块之间的依赖关系，构建的方式很多种，下边是gulp 的<code>amd-optimize</code>插件构建笔记。<br>]]>
    
    </summary>
    
      <category term="AMD" scheme="http://giscafer.com/tags/AMD/"/>
    
      <category term="gulp" scheme="http://giscafer.com/tags/gulp/"/>
    
      <category term="前端构建" scheme="http://giscafer.com/tags/%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA/"/>
    
      <category term="AMD" scheme="http://giscafer.com/categories/AMD/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[什么，你还不懂前端自动化构建？]]></title>
    <link href="http://giscafer.com/2015/11/30/gulp-front-end-automated-builds/"/>
    <id>http://giscafer.com/2015/11/30/gulp-front-end-automated-builds/</id>
    <published>2015-11-30T14:29:09.000Z</published>
    <updated>2015-12-02T12:14:30.638Z</updated>
    <content type="html"><![CDATA[<p>如果你是搞前端开发的，或者你每天都在写CSS、JavaScript等前端编程语言代码，如果你不知道什么叫前端自动化构建，那一般只有两种情况：</p>
<ol>
<li>你在传统软件行业，用着4、5年前网页开发方式工作;</li>
<li>你并不是一个真正的Front End Software Engineer；</li>
</ol>
<h3 id="什么是前端构建工具？">什么是前端构建工具？</h3><p>前端构建工具——实现前端代码的编译（sass、less）、压缩、测试；图片的压缩以及浏览器自动刷新等等功能。</p>
<p>目前流行的三大前端构建工具<code>grunt</code>、<code>gulp</code>、<code>fis3</code>，他们都是基于Node.js的插件工具。前两个是国外出品，fis3是百度国产。fis3听说还不错，但是还没使用过，之前学习NodeJS使用的是grunt,感觉这东西挺牛。智能、前端自动化。听说<code>gulp</code>比<code>grunt</code>好用些，所以就研究一下吧。</p>
<a id="more"></a>
<p>以下是学习笔记，官方gulp工具介绍见<a href="https://github.com/gulpjs/gulp/blob/master/docs/getting-started.md" target="_blank" rel="external">github</a></p>
<h3 id="一、安装gulp工具到全局环境">一、安装gulp工具到全局环境</h3><p><code>（前提安装了NodeJS和NPM）</code></p>
<pre><code>$  <span class="built_in">npm</span> install --<span class="built_in">global</span> gulp
</code></pre><h3 id="二、接着进入项目根目录下，安装gulp开发依赖环境">二、接着进入项目根目录下，安装gulp开发依赖环境</h3><p><code>如果项目下没有package.json文件，请阅读下边步骤再继续此步骤</code></p>
<pre><code>$  npm install --<span class="built_in">save</span>-<span class="built_in">dev</span> gulp
</code></pre><h3 id="（二）生成package-json">（二）生成package.json</h3><pre><code><span class="built_in">npm</span> init
</code></pre><p>输入<code>npm init</code>，回车回车即可生成</p>
<h3 id="三、安装必要的Gulp插件">三、安装必要的Gulp插件</h3><ul>
<li>压缩css（gulp-minify-css）</li>
<li>js代码校验（gulp-jshint）</li>
<li>合并js文件（gulp-concat）</li>
<li>压缩js代码（gulp-uglify）</li>
<li>压缩图片（gulp-imagemin）</li>
<li>文件重命名 （gulp-rename）</li>
<li>自动刷新页面（gulp-livereload）</li>
<li>更改提醒（gulp-notify）</li>
<li>合并js顺序（gulp-order）（<a href="https://github.com/sirlantis/gulp-order）" target="_blank" rel="external">https://github.com/sirlantis/gulp-order）</a></li>
</ul>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  npm <span class="operator"><span class="keyword">install</span> gulp-minify-css gulp-jshint gulp-<span class="keyword">concat</span> gulp-uglify gulp-imagemin gulp-notify gulp-livereload gulp-rename <span class="comment">--save-dev</span></span></span><br></pre></td></tr></table></figure>
<p>安装完后 package.json文件内容如下：</p>
<pre><code>  {
"<span class="attribute">name</span>": <span class="value"><span class="string">"goodgis"</span></span>,
"<span class="attribute">version</span>": <span class="value"><span class="string">"1.0.0"</span></span>,
"<span class="attribute">description</span>": <span class="value"><span class="string">""</span></span>,
"<span class="attribute">main</span>": <span class="value"><span class="string">"main.js"</span></span>,
"<span class="attribute">directories</span>": <span class="value">{
  "<span class="attribute">test</span>": <span class="value"><span class="string">"test"</span>
</span>}</span>,
"<span class="attribute">dependencies</span>": <span class="value">{
  "<span class="attribute">gulp</span>": <span class="value"><span class="string">"^3.9.0"</span>
</span>}</span>,
"<span class="attribute">devDependencies</span>": <span class="value">{
  "<span class="attribute">gulp</span>": <span class="value"><span class="string">"^3.9.0"</span></span>,
  "<span class="attribute">gulp-concat</span>": <span class="value"><span class="string">"^2.6.0"</span></span>,
  "<span class="attribute">gulp-imagemin</span>": <span class="value"><span class="string">"^2.4.0"</span></span>,
  "<span class="attribute">gulp-jshint</span>": <span class="value"><span class="string">"^2.0.0"</span></span>,
  "<span class="attribute">gulp-livereload</span>": <span class="value"><span class="string">"^3.8.1"</span></span>,
  "<span class="attribute">gulp-minify-css</span>": <span class="value"><span class="string">"^1.2.1"</span></span>,
  "<span class="attribute">gulp-notify</span>": <span class="value"><span class="string">"^2.2.0"</span></span>,
  "<span class="attribute">gulp-rename</span>": <span class="value"><span class="string">"^1.2.2"</span></span>,
  "<span class="attribute">gulp-uglify</span>": <span class="value"><span class="string">"^1.5.1"</span></span>,
  "<span class="attribute">jshint</span>": <span class="value"><span class="string">"^2.8.0"</span>
</span>}</span>,
"<span class="attribute">scripts</span>": <span class="value">{
  "<span class="attribute">test</span>": <span class="value"><span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>
</span>}</span>,
"<span class="attribute">author</span>": <span class="value"><span class="string">""</span></span>,
"<span class="attribute">license</span>": <span class="value"><span class="string">"ISC"</span>
  </span>}
</code></pre><h3 id="四、根目录下创建gulpfile-js文件">四、根目录下创建gulpfile.js文件</h3><p>代码如下，作用看注释</p>
<pre><code><span class="comment">//引入插件</span>
   <span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),
       <span class="comment">// minifycss = require('gulp-minify-css'),</span>
       jshint = <span class="built_in">require</span>(<span class="string">'gulp-jshint'</span>), <span class="comment">//代码验证检查</span>
       uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>), <span class="comment">//压缩js代码</span>
       rename = <span class="built_in">require</span>(<span class="string">'gulp-rename'</span>), <span class="comment">//文件重命名</span>
       concat = <span class="built_in">require</span>(<span class="string">'gulp-concat'</span>), <span class="comment">//合并js文件</span>
       notify = <span class="built_in">require</span>(<span class="string">'gulp-notify'</span>), <span class="comment">//更改提醒</span>
       livereload = <span class="built_in">require</span>(<span class="string">'gulp-livereload'</span>); <span class="comment">//自动刷新页面</span>

   <span class="comment">//js代码校验、合并和压缩（类似jquery的链式操作，牛）</span>
   gulp.task(<span class="string">'scripts'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{
       <span class="keyword">return</span> gulp.src(<span class="string">'src/**/*.js'</span>) <span class="comment">//源文件</span>
           .pipe(jshint(<span class="string">'.jshintrc'</span>)) <span class="comment">//1、校验JS文件，jshint校验规则</span>
           .pipe(jshint.reporter(<span class="string">'default'</span>)) 
           .pipe(concat(<span class="string">'goodgis.js'</span>))  <span class="comment">//2、合并js文件，goodgis.js为合并的文件名称</span>
           .pipe(gulp.dest(<span class="string">'dist'</span>))  <span class="comment">//合并后文件存放位置</span>
           .pipe(rename({
               suffix: <span class="string">'.min'</span>
           }))
           .pipe(uglify())         <span class="comment">//3、执行压缩任务</span>
           .pipe(gulp.dest(<span class="string">'dist'</span>))  <span class="comment">//压缩后文件存放位置</span>
           .pipe(notify({    <span class="comment">//4、操作结束后提示</span>
               message: <span class="string">'Scripts task complete'</span>
           }));
   });
   <span class="comment">// 默认任务，这里完全可以是多个任务，比如压缩CSS，压缩图片，压缩js等</span>
   gulp.task(<span class="string">'default'</span>,[<span class="string">'watch'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{
       gulp.start(<span class="string">'scripts'</span>);
   });
   <span class="comment">// 监听（前端自动化的情怀）</span>
   gulp.task(<span class="string">'watch'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{
       <span class="comment">// 监听 .js文件改动，一旦改动就会自动压缩合并</span>
       gulp.watch(<span class="string">'src/**/*.js'</span>, [<span class="string">'scripts'</span>]);
       <span class="comment">// Create LiveReload server（用来自动刷新浏览器）</span>
       livereload.listen();
       <span class="comment">// Watch any files in dist/, reload on change</span>
       gulp.watch([<span class="string">'dist/**'</span>]).on(<span class="string">'change'</span>, livereload.changed);
   });
</code></pre><h3 id="五、执行gulp">五、执行gulp</h3><pre><code><span class="variable">$ </span>gulp
</code></pre><p>只需要gulp一下，之后一切都如此自动化，可以自动压缩CSS，JavaScript，图片，自动刷新浏览器等等。并且，能做的并不只有这些，另外，你还可以自己写插件。</p>
<p><img src="http://giscafer.com/static/img/gulp-intro1.png" alt="新增了dist文件夹"></p>
<p><img src="http://giscafer.com/static/img/gulp-intro2.png" alt="里边就是合并压缩的文件"></p>
<p>原src下很多文件夹，文件夹下很多js文件，如图：</p>
<p><img src="http://giscafer.com/static/img/gulp-intro0.png" alt="src文件夹"></p>
<p>不管怎么修改，会自动将整个src文件夹中的js文件（<code>src/**/*.js</code>）压缩合并到dist目录下的<code>goodgis.js</code>(合并未压缩)和<code>goodgis.mini.js</code>(合并且压缩)。</p>
<h3 id="六、总结">六、总结</h3><p>个人觉得，确实gulp会比grunt好用一点，方便；看使用场景和个人爱好吧，了解NodeJS的话就不会觉得有任何难度了。</p>
<hr>
<p><code>Unauthorized use tool that lets you work more efficiently</code></p>
<ul>
<li>构建工具官网：<a href="http://gruntjs.com/" target="_blank" rel="external">grunt</a>  、  <a href="http://gulpjs.com/" target="_blank" rel="external">gulp</a>   、 <a href="http://fis.baidu.com/" target="_blank" rel="external">fis3</a></li>
<li>livereload(浏览器自动刷新):<a href="http://feedback.livereload.com/" target="_blank" rel="external">http://feedback.livereload.com/</a>    或参考<a href="http://feedback.livereload.com/knowledgebase/articles/86180-how-do-i-add-the-script-tag-manually-" target="_blank" rel="external">方法二</a></li>
</ul>
<hr>
]]></content>
    <summary type="html">
    <![CDATA[<p>如果你是搞前端开发的，或者你每天都在写CSS、JavaScript等前端编程语言代码，如果你不知道什么叫前端自动化构建，那一般只有两种情况：</p>
<ol>
<li>你在传统软件行业，用着4、5年前网页开发方式工作;</li>
<li>你并不是一个真正的Front End Software Engineer；</li>
</ol>
<h3 id="什么是前端构建工具？">什么是前端构建工具？</h3><p>前端构建工具——实现前端代码的编译（sass、less）、压缩、测试；图片的压缩以及浏览器自动刷新等等功能。</p>
<p>目前流行的三大前端构建工具<code>grunt</code>、<code>gulp</code>、<code>fis3</code>，他们都是基于Node.js的插件工具。前两个是国外出品，fis3是百度国产。fis3听说还不错，但是还没使用过，之前学习NodeJS使用的是grunt,感觉这东西挺牛。智能、前端自动化。听说<code>gulp</code>比<code>grunt</code>好用些，所以就研究一下吧。</p>]]>
    
    </summary>
    
      <category term="AMD" scheme="http://giscafer.com/tags/AMD/"/>
    
      <category term="gulp" scheme="http://giscafer.com/tags/gulp/"/>
    
      <category term="前端构建" scheme="http://giscafer.com/tags/%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA/"/>
    
      <category term="AMD" scheme="http://giscafer.com/categories/AMD/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JFinal设置基础路径为WEB-INF]]></title>
    <link href="http://giscafer.com/2015/10/30/jfinal-setbaseview/"/>
    <id>http://giscafer.com/2015/10/30/jfinal-setbaseview/</id>
    <published>2015-10-30T13:49:31.000Z</published>
    <updated>2015-10-30T14:21:14.291Z</updated>
    <content type="html"><![CDATA[<h2 id="一、路由路径规则">一、路由路径规则</h2><blockquote>
<p>1：模板路径= BaseViewPath + ViewPath + render时的参数</p>
<p>2：当 render 时view的参数以 “/“ 打头，则模板路径使用从WebRoot下的绝对路</p>
<p>3：在配置路由时如果省略第三个参数，则 viewPath = controllerKey</p>
</blockquote>
<a id="more"></a>
<p>在JFinalConfig的<code>configConstant</code>方法中设置/WEB-INF/views/为基础路径；<br><code>me.setBaseViewPath(&quot;/WEB-INF/views/&quot;)</code>；</p>
<p>设定后，路由configRoute内的视图路径就会直接找<code>/WEB-INF/views/</code>下的文件，Controller里边render 时view的参数不能以 “/“ 打头，不然就是直接是找WebRoot下的绝对路径。</p>
<pre><code><span class="tag">&lt;<span class="title">filter</span>&gt;</span>
    <span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>jfinal<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span>
    <span class="tag">&lt;<span class="title">filter-class</span>&gt;</span>com.jfinal.core.JFinalFilter<span class="tag">&lt;/<span class="title">filter-class</span>&gt;</span>
    <span class="tag">&lt;<span class="title">init-param</span>&gt;</span>
        <span class="tag">&lt;<span class="title">param-name</span>&gt;</span>configClass<span class="tag">&lt;/<span class="title">param-name</span>&gt;</span>
        <span class="tag">&lt;<span class="title">param-value</span>&gt;</span>com.giscafer.schedule.config.ScheduleConfig<span class="tag">&lt;/<span class="title">param-value</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">init-param</span>&gt;</span>
<span class="tag">&lt;/<span class="title">filter</span>&gt;</span>

<span class="tag">&lt;<span class="title">filter-mapping</span>&gt;</span>
    <span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>jfinal<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span>
    <span class="tag">&lt;<span class="title">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="title">url-pattern</span>&gt;</span><span class="comment">&lt;!--此处如果不是/*的话，路由会失效--&gt;</span>
<span class="tag">&lt;/<span class="title">filter-mapping</span>&gt;</span>
</code></pre><h2 id="JFinal_过滤器拦截Servlet解决方法">JFinal 过滤器拦截Servlet解决方法</h2><p>JFinal配置的过滤器（如上过滤器配置）会拦截掉Servlet请求，这个时候可以通过配置路由处理器来解决：</p>
<pre><code><span class="comment">/**
 * 配置处理器
 */</span>
<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configHandler</span><span class="params">(Handlers me)</span> </span>{
    <span class="comment">//使用此方式跳过jfinal过滤器对servlet的拦截</span>
    me.add(<span class="keyword">new</span> UrlSkipHandler(<span class="string">"/home"</span>, <span class="literal">false</span>));
}
</code></pre><p>这样，<code>/home</code>路径的servlet就不会被jfinal的过滤器拦截了。这是最方便的解决方式。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="一、路由路径规则">一、路由路径规则</h2><blockquote>
<p>1：模板路径= BaseViewPath + ViewPath + render时的参数</p>
<p>2：当 render 时view的参数以 “/“ 打头，则模板路径使用从WebRoot下的绝对路</p>
<p>3：在配置路由时如果省略第三个参数，则 viewPath = controllerKey</p>
</blockquote>]]>
    
    </summary>
    
      <category term="JFinal" scheme="http://giscafer.com/tags/JFinal/"/>
    
      <category term="JFinal" scheme="http://giscafer.com/categories/JFinal/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用swiftype为hexo博客添加站内搜索]]></title>
    <link href="http://giscafer.com/2015/10/18/swiftype-for-hexo/"/>
    <id>http://giscafer.com/2015/10/18/swiftype-for-hexo/</id>
    <published>2015-10-18T07:42:47.000Z</published>
    <updated>2015-10-18T08:04:47.383Z</updated>
    <content type="html"><![CDATA[<p>之前使用百度站内搜索，本质其实是跳转到百度页面搜索站点内容，效果也不好，今天更换闻名已久的swiftype。</p>
<a id="more"></a>
<h3 id="下边看效果图：">下边看效果图：</h3><p><img src="/static/img/swiftype-for-hexo1.png" alt="自动搜索效果"><br><img src="/static/img/swiftype-for-hexo2.png" alt="回车搜索结果弹窗"></p>
<h3 id="实现过程">实现过程</h3><p><strong>1、注册swiftype账号，创建search engine，创建步骤简单详细；</strong></p>
<p><strong>2、添加search.ejs widget文件</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"search"</span> action=<span class="string">""</span> method=<span class="string">"get"</span> accept-charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">		<span class="xml"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">class</span>=<span class="value">"st-default-search-input"</span> <span class="attribute">maxlength</span>=<span class="value">"20"</span> <span class="attribute">style</span>=<span class="value">"height:40px"</span> <span class="attribute">placeholder</span>=<span class="value">"Search"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params">w,d,t,u,n,s,e</span>)</span>&#123;w[<span class="string">'SwiftypeObject'</span>]=n;w[n]=w[n]||<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  (w[n].q=w[n].q||[]).push(<span class="built_in">arguments</span>);&#125;;s=d.createElement(t);</span><br><span class="line">  e=d.getElementsByTagName(t)[<span class="number">0</span>];s.async=<span class="number">1</span>;s.src=u;e.parentNode.insertBefore(s,e);</span><br><span class="line">  &#125;)(<span class="built_in">window</span>,<span class="built_in">document</span>,<span class="string">'script'</span>,<span class="string">'//s.swiftypecdn.com/install/v2/st.js'</span>,<span class="string">'_st'</span>);</span><br><span class="line"></span><br><span class="line">  _st(<span class="string">'install'</span>,<span class="string">'ZfmnF1vBkUFHkfhgCvjA'</span>,<span class="string">'2.0.0'</span>);</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>其中：以上的<code>ZfmnF1vBkUFHkfhgCvjA</code>是swiftype搜索engine key，在注册创建search engine的最后脚本代码会给出，拷贝使用即可。然后再主题下的<code>_config.yml</code>内引入</p>
<pre><code><span class="label">widgets:</span>
- search <span class="preprocessor">##swiftype</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>之前使用百度站内搜索，本质其实是跳转到百度页面搜索站点内容，效果也不好，今天更换闻名已久的swiftype。</p>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://giscafer.com/tags/Hexo/"/>
    
      <category term="swiftype" scheme="http://giscafer.com/tags/swiftype/"/>
    
      <category term="Hexo" scheme="http://giscafer.com/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[基于fullCalendar二次开发的排班管理和考勤签到功能]]></title>
    <link href="http://giscafer.com/2015/10/15/fullcalendar-schedule-secondary-del/"/>
    <id>http://giscafer.com/2015/10/15/fullcalendar-schedule-secondary-del/</id>
    <published>2015-10-14T16:59:48.000Z</published>
    <updated>2015-10-15T10:17:42.273Z</updated>
    <content type="html"><![CDATA[<p>最近做个GIS的巡护系统需要开发一个排班管理功能和一个考勤签到统计功能，在查找实现方式和插件后，决定使用<code>fullCalendar</code>进行二次开发来实现；<code>fullCalendar</code>是一个jQuery日历插件，使用它主要是为了借助其日期功能的实现。（另外，有个和fullCalendar类型的日历插件是<code>dhtmlxScheduler</code>，都能达到大致一样的效果）</p>
<a id="more"></a>
<p><strong>eg:fullCalendar可以使用简单的几句代码就可以实现一个中文日历了：</strong></p>
<pre><code>$(<span class="string">'#calenderDemo'</span>).<span class="atom">fullCalendar</span>({
 <span class="atom">buttonText</span>: {
  <span class="atom">today</span>: <span class="string">'今天'</span>,
  <span class="atom">month</span>: <span class="string">'月'</span>,
  <span class="atom">week</span>: <span class="string">'周'</span>,
  <span class="atom">day</span>: <span class="string">'天'</span>
 },
 <span class="atom">allDayText</span>: <span class="string">'全天'</span>,
 <span class="atom">monthNames</span>: [<span class="string">'一月'</span>,<span class="string">'二月'</span>,<span class="string">'三月'</span>,<span class="string">'四月'</span>,<span class="string">'五月'</span>,<span class="string">'六月'</span>,<span class="string">'七月'</span>,<span class="string">'八月'</span>,<span class="string">'九月'</span>,<span class="string">'十月'</span>,<span class="string">'十一月'</span>,<span class="string">'十二月'</span>],
 <span class="atom">monthNamesShort</span>: [<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>,<span class="string">'7'</span>,<span class="string">'8'</span>,<span class="string">'9'</span>,<span class="string">'10'</span>,<span class="string">'11'</span>,<span class="string">'12'</span>],
 <span class="atom">dayNames</span>: [<span class="string">'星期日'</span>,<span class="string">'星期一'</span>,<span class="string">'星期二'</span>,<span class="string">'星期三'</span>,<span class="string">'星期四'</span>,<span class="string">'星期五'</span>,<span class="string">'星期六'</span>],
 <span class="atom">dayNamesShort</span>: [<span class="string">'周日'</span>,<span class="string">'周一'</span>,<span class="string">'周二'</span>,<span class="string">'周三'</span>,<span class="string">'周四'</span>,<span class="string">'周五'</span>,<span class="string">'周六'</span>],
});
</code></pre><p><code>fullCalendar</code>目前是2.4版本，在对比源码看的时候，发现1.5和1.6的版本的源码写的相对简单易懂，所以旧使用了版本1.6.4进行修改。下边就是二次开发成果展示了！！！</p>
<h2 id="一、排班管理开发截图">一、排班管理开发截图</h2><p><img src="http://giscafer.github.io/static/img/fullcalendar_paiban_add.png" alt="排班的添加"><br><img src="http://giscafer.github.io/static/img/fullcalendar_paiban_ctrol1.png" alt="排班的班次控制：不能添加相同班次"><br><img src="http://giscafer.github.io/static/img/fullcalendar_paiban_ctrol2.png" alt="排班的班次控制：一天不能添加超过3个班次"><br><img src="http://giscafer.github.io/static/img/fullcalendar_plan_setting.png" alt="额外的功能：班次的维护，班次颜色设定和顺序修改"></p>
<p><img src="http://giscafer.github.io/static/img/fullcalendar_paiban_view.png" alt="设定的排班保存数据库后结果展示"></p>
<h2 id="二、考勤签到开发截图">二、考勤签到开发截图</h2><p><img src="http://giscafer.github.io/static/img/fullcalendar_check_1.png" alt="考勤签到9月份"></p>
<p><img src="http://giscafer.github.io/static/img/fullcalendar_check_2.png" alt="考勤签到10月份"></p>
<h2 id="三、开发总结">三、开发总结</h2><p>纯粹的JS编写和样式CSS编写，麻烦的只是数据的组装；弄清楚fullCalendar实现的原理和渲染的方式后，按照自己的业务逻辑组织好数据就可以了。</p>
<h2 id="四、源码分享">四、源码分享</h2><p>作为一名程序猿，应具备的素养，不得不放出源码（提示：源码不能运行，因为demo链接了数据库，对着文章截图看源码吧）。</p>
<p>  请移步——》<a href="https://github.com/giscafer/schedule" target="_blank" rel="external">https://github.com/giscafer/schedule</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近做个GIS的巡护系统需要开发一个排班管理功能和一个考勤签到统计功能，在查找实现方式和插件后，决定使用<code>fullCalendar</code>进行二次开发来实现；<code>fullCalendar</code>是一个jQuery日历插件，使用它主要是为了借助其日期功能的实现。（另外，有个和fullCalendar类型的日历插件是<code>dhtmlxScheduler</code>，都能达到大致一样的效果）</p>]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://giscafer.com/tags/JavaScript/"/>
    
      <category term="fullCalendar" scheme="http://giscafer.com/tags/fullCalendar/"/>
    
      <category term="排班管理" scheme="http://giscafer.com/tags/%E6%8E%92%E7%8F%AD%E7%AE%A1%E7%90%86/"/>
    
      <category term="考勤签到" scheme="http://giscafer.com/tags/%E8%80%83%E5%8B%A4%E7%AD%BE%E5%88%B0/"/>
    
      <category term="JavaScript" scheme="http://giscafer.com/categories/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[jquery-mp3.js模仿站长之家的音乐播放效果]]></title>
    <link href="http://giscafer.com/2015/09/15/jquery-mp3-demo/"/>
    <id>http://giscafer.com/2015/09/15/jquery-mp3-demo/</id>
    <published>2015-09-15T15:52:42.000Z</published>
    <updated>2015-09-15T17:39:11.820Z</updated>
    <content type="html"><![CDATA[<p><code>jquery-mp3.js</code>简称jmp3，是一个采用jQuery开发的JavaScript MP3插放器，提供一种可以在页面上直接播放MP3的简便方式。<br>详情：<a href="http://www.sean-o.com/jquery/jmp3/" target="_blank" rel="external">http://www.sean-o.com/jquery/jmp3/</a></p>
<a id="more"></a>
<p>其源代码也很简洁和简单：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">    jQuery.fn.jmp3 = <span class="function"><span class="keyword">function</span>(<span class="params">passedOptions</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> options = &#123;</span><br><span class="line">        <span class="string">"playerpath"</span>: <span class="string">"music/"</span>,<span class="comment">//mp3播放器singlemp3player.swf的路径(mp3文件是用这个swf文件播放的)</span></span><br><span class="line">        <span class="string">"filepath"</span>: <span class="string">""</span>, <span class="comment">//mp3文件路径</span></span><br><span class="line">        <span class="string">"backcolor"</span>: <span class="string">""</span>,<span class="comment">//播放整体按钮的背景颜色</span></span><br><span class="line">        <span class="string">"forecolor"</span>: <span class="string">"ffffff"</span>,<span class="comment">//播放按钮【中间那个三角形】的颜色</span></span><br><span class="line">        <span class="string">"width"</span>: <span class="string">"25"</span>,<span class="comment">//播放器长度</span></span><br><span class="line">        <span class="string">"repeat"</span>: <span class="string">"no"</span>,<span class="comment">//是否重复播放mp3</span></span><br><span class="line">        <span class="string">"volume"</span>: <span class="string">"50"</span>,<span class="comment">//mp3音量 (0-100)</span></span><br><span class="line">        <span class="string">"autoplay"</span>: <span class="string">"false"</span>,<span class="comment">//当播放器初始化好后是否自动播放，默认false</span></span><br><span class="line">        <span class="string">"showdownload"</span>: <span class="string">"true"</span>,<span class="comment">//是否显示下载mp3按钮</span></span><br><span class="line">        <span class="string">"showfilename"</span>: <span class="string">"true"</span><span class="comment">//是否显示mp3的文件名称</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (passedOptions) &#123;</span><br><span class="line">        jQuery.extend(options, passedOptions);</span><br><span class="line">        playerpath = options.playerpath</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> playerpath = options.playerpath;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> _container = jQuery(<span class="keyword">this</span>).prev();</span><br><span class="line">        <span class="keyword">if</span> (!_container.is(<span class="string">'.container'</span>)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">var</span> filename = options.filepath + jQuery(<span class="keyword">this</span>).html();</span><br><span class="line">        <span class="keyword">var</span> mp3html = <span class="string">'&lt;object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" '</span>;</span><br><span class="line">        mp3html += <span class="string">'width="'</span> + options.width + <span class="string">'" height="20" '</span>;</span><br><span class="line">        mp3html += <span class="string">'codebase="'</span> + playerpath + <span class="string">'swflash.cab"&gt;'</span>;</span><br><span class="line">        mp3html += <span class="string">'&lt;param name="movie" value="'</span> + playerpath + <span class="string">'singlemp3player.swf?'</span>;</span><br><span class="line">        mp3html += <span class="string">'showDownload='</span> + options.showdownload + <span class="string">'&amp;file='</span> + filename + <span class="string">'&amp;autoStart='</span> + options.autoplay;</span><br><span class="line">        mp3html += <span class="string">'&amp;backColor='</span> + options.backcolor + <span class="string">'&amp;frontColor='</span> + options.forecolor;</span><br><span class="line">        mp3html += <span class="string">'&amp;repeatPlay='</span> + options.repeat + <span class="string">'&amp;songVolume='</span> + options.volume + <span class="string">'" /&gt;'</span>;</span><br><span class="line">        mp3html += <span class="string">'&lt;param name="wmode" value="transparent" /&gt;'</span>;</span><br><span class="line">        mp3html += <span class="string">'&lt;embed wmode="transparent" width="'</span> + options.width + <span class="string">'" height="20" '</span>;</span><br><span class="line">        mp3html += <span class="string">'src="'</span> + playerpath + <span class="string">'singlemp3player.swf?'</span>;</span><br><span class="line">        mp3html += <span class="string">'showDownload='</span> + options.showdownload + <span class="string">'&amp;file='</span> + filename + <span class="string">'&amp;autoStart='</span> + options.autoplay;</span><br><span class="line">        mp3html += <span class="string">'&amp;backColor='</span> + options.backcolor + <span class="string">'&amp;frontColor='</span> + options.forecolor;</span><br><span class="line">        mp3html += <span class="string">'&amp;repeatPlay='</span> + options.repeat + <span class="string">'&amp;songVolume='</span> + options.volume + <span class="string">'" '</span>;</span><br><span class="line">        mp3html += <span class="string">'type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" /&gt;'</span>;</span><br><span class="line">        mp3html += <span class="string">'&lt;/object&gt;'</span>;</span><br><span class="line">        <span class="keyword">if</span> (options.showfilename == <span class="string">"false"</span>) &#123;</span><br><span class="line">            jQuery(<span class="keyword">this</span>).html(<span class="string">""</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> (_container.is(<span class="string">'.container'</span>)) &#123;</span><br><span class="line">            _container.prepend(mp3html + <span class="string">"&amp;nbsp;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>使用jmp3模拟站长之家的音乐播放效果如图：</p>
<p><img src="http://giscafer.github.io/static/img/jquery-mp3-demo.png" alt="demo效果"></p>
<p>》》》<a href="http://giscafer.github.io/static/demo/jquery-mp3/index.html" target="_blank" rel="external">【在线演示】</a>》》》》》<a href="http://giscafer.github.io/static/demo/jquery-mp3.zip" target="_blank" rel="external">【源码下载】</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><code>jquery-mp3.js</code>简称jmp3，是一个采用jQuery开发的JavaScript MP3插放器，提供一种可以在页面上直接播放MP3的简便方式。<br>详情：<a href="http://www.sean-o.com/jquery/jmp3/">http://www.sean-o.com/jquery/jmp3/</a></p>]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://giscafer.com/tags/JavaScript/"/>
    
      <category term="Jquery" scheme="http://giscafer.com/tags/Jquery/"/>
    
      <category term="jmp3" scheme="http://giscafer.com/tags/jmp3/"/>
    
      <category term="JavaScript" scheme="http://giscafer.com/categories/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[GeoTools使用之JTSFactoryFinder接口demo]]></title>
    <link href="http://giscafer.com/2015/09/09/jst-JSTFactoryFinder-geometry/"/>
    <id>http://giscafer.com/2015/09/09/jst-JSTFactoryFinder-geometry/</id>
    <published>2015-09-09T05:07:04.000Z</published>
    <updated>2015-10-15T15:33:25.562Z</updated>
    <content type="html"><![CDATA[<p>GIS项目开发中用到的一个工具类<br>（依赖jar文件为<code>gt-opengis-8.0-M0.jar</code>、<code>jsr-275-1.0-beta-2.jar</code>更高版本不限定）</p>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.giscafer.geometry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.geotools.factory.Hints;</span><br><span class="line"><span class="keyword">import</span> org.geotools.geometry.GeneralDirectPosition;</span><br><span class="line"><span class="keyword">import</span> org.geotools.geometry.jts.JTSFactoryFinder;</span><br><span class="line"><span class="keyword">import</span> org.geotools.referencing.ReferencingFactoryFinder;</span><br><span class="line"><span class="keyword">import</span> org.opengis.geometry.DirectPosition;</span><br><span class="line"><span class="keyword">import</span> org.opengis.geometry.MismatchedDimensionException;</span><br><span class="line"><span class="keyword">import</span> org.opengis.referencing.FactoryException;</span><br><span class="line"><span class="keyword">import</span> org.opengis.referencing.crs.CRSFactory;</span><br><span class="line"><span class="keyword">import</span> org.opengis.referencing.crs.CoordinateReferenceSystem;</span><br><span class="line"><span class="keyword">import</span> org.opengis.referencing.operation.CoordinateOperation;</span><br><span class="line"><span class="keyword">import</span> org.opengis.referencing.operation.CoordinateOperationFactory;</span><br><span class="line"><span class="keyword">import</span> org.opengis.referencing.operation.MathTransform;</span><br><span class="line"><span class="keyword">import</span> org.opengis.referencing.operation.TransformException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.vividsolutions.jts.geom.Coordinate;</span><br><span class="line"><span class="keyword">import</span> com.vividsolutions.jts.geom.Geometry;</span><br><span class="line"><span class="keyword">import</span> com.vividsolutions.jts.geom.GeometryFactory;</span><br><span class="line"><span class="keyword">import</span> com.vividsolutions.jts.geom.LineString;</span><br><span class="line"><span class="keyword">import</span> com.vividsolutions.jts.geom.LinearRing;</span><br><span class="line"><span class="keyword">import</span> com.vividsolutions.jts.geom.Point;</span><br><span class="line"><span class="keyword">import</span> com.vividsolutions.jts.geom.Polygon;</span><br><span class="line"><span class="keyword">import</span> com.vividsolutions.jts.io.ParseException;</span><br><span class="line"><span class="keyword">import</span> com.vividsolutions.jts.io.WKTReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeometryUtil</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> GeometryFactory geometryFactory = JTSFactoryFinder.getGeometryFactory( <span class="keyword">null</span> ); </span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> CRSFactory crsFactory = ReferencingFactoryFinder.getCRSFactory(<span class="keyword">null</span>); </span><br><span class="line">	<span class="comment">//WGS2000经纬度坐标系</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String GCS_China_2000 = <span class="string">"GEOGCS[\"GCS_China_Geodetic_Coordinate_System_2000\",DATUM[\"D_China_2000\",SPHEROID[\"CGCS2000\",6378137.0,298.257222101]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]]"</span>;</span><br><span class="line">    <span class="comment">//墨卡托平面坐标系，用距离计算、面积计算</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String Mercator_XY_WKT = <span class="string">"PROJCS[\"WGS_1984_Web_Mercator\",GEOGCS[\"GCS_WGS_1984_Major_Auxiliary_Sphere\",DATUM[\"D_WGS_1984_Major_Auxiliary_Sphere\",SPHEROID[\"WGS_1984_Major_Auxiliary_Sphere\",6378137.0,0.0]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Mercator\"],PARAMETER[\"False_Easting\",0.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",0.0],PARAMETER[\"Standard_Parallel_1\",0.0],UNIT[\"Meter\",1.0]]"</span>;</span><br><span class="line">	<span class="comment">//坐标转换对象</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">/** </span><br><span class="line">     * create a Point </span><br><span class="line">     * <span class="doctag">@param</span> x </span><br><span class="line">     * <span class="doctag">@param</span> y </span><br><span class="line">     * <span class="doctag">@return</span> </span><br><span class="line">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Coordinate <span class="title">createPoint</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y)</span></span>&#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Coordinate(x,y);  </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">/**</span><br><span class="line">	 * create a point</span><br><span class="line">	 * <span class="doctag">@return</span> Geometry</span><br><span class="line">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Point <span class="title">createGeoPoint</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y)</span></span>&#123;</span><br><span class="line">		Coordinate coord = <span class="keyword">new</span> Coordinate(x, y);</span><br><span class="line">		Point point = geometryFactory.createPoint( coord );</span><br><span class="line">		<span class="keyword">return</span> point;</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 通过读取WKT字符串创建空间对象 </span><br><span class="line">     * <span class="doctag">@param</span> geomWKT</span><br><span class="line">     * <span class="doctag">@return</span></span><br><span class="line">     * <span class="doctag">@throws</span> ParseException</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Geometry <span class="title">createPointByWKT</span><span class="params">(String geomWKT)</span> <span class="keyword">throws</span> ParseException</span>&#123;  </span><br><span class="line">        WKTReader reader = <span class="keyword">new</span> WKTReader( geometryFactory );  </span><br><span class="line">        Geometry geom =reader.read(geomWKT);  </span><br><span class="line">        <span class="keyword">return</span> geom;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span><br><span class="line">     * create a line </span><br><span class="line">     * <span class="doctag">@return</span> </span><br><span class="line">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LineString <span class="title">createLine</span><span class="params">(List&lt;Coordinate&gt; points)</span></span>&#123;</span><br><span class="line">    	<span class="keyword">if</span>(points.size()&lt;<span class="number">2</span>)&#123;</span><br><span class="line">    		points.add(points.get(<span class="number">0</span>));</span><br><span class="line">    	&#125;</span><br><span class="line">        Coordinate[] coords  = (Coordinate[]) points.toArray(<span class="keyword">new</span> Coordinate[points.size()]);  </span><br><span class="line">        LineString line = geometryFactory.createLineString(coords);  </span><br><span class="line">        <span class="keyword">return</span> line;  </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 根据点串创建多边形</span><br><span class="line">     * <span class="doctag">@param</span> points</span><br><span class="line">     * <span class="doctag">@return</span></span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Polygon <span class="title">createPolygon</span><span class="params">(List&lt;Coordinate&gt; points)</span></span>&#123;</span><br><span class="line">    	Coordinate[] coords  = (Coordinate[]) points.toArray(<span class="keyword">new</span> Coordinate[points.size()]);  </span><br><span class="line">    	Polygon polygon=geometryFactory.createPolygon(coords);</span><br><span class="line">    	<span class="keyword">return</span> polygon;</span><br><span class="line">    &#125;</span><br><span class="line">      </span><br><span class="line">    <span class="comment">/** </span><br><span class="line">     * 返回(A)与(B)中距离最近的两个点的距离 </span><br><span class="line">     * <span class="doctag">@param</span> a </span><br><span class="line">     * <span class="doctag">@param</span> b </span><br><span class="line">     * <span class="doctag">@return</span> </span><br><span class="line">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">distanceGeo</span><span class="params">(Geometry a,Geometry b)</span></span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> a.distance(b);  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    <span class="comment">/** </span><br><span class="line">     * 两个几何对象的交集 </span><br><span class="line">     * <span class="doctag">@param</span> a </span><br><span class="line">     * <span class="doctag">@param</span> b </span><br><span class="line">     * <span class="doctag">@return</span> </span><br><span class="line">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Geometry <span class="title">intersectionGeo</span><span class="params">(Geometry a,Geometry b)</span></span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> a.intersection(b);  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    <span class="comment">/** </span><br><span class="line">     * 几何对象合并 </span><br><span class="line">     * <span class="doctag">@param</span> a </span><br><span class="line">     * <span class="doctag">@param</span> b </span><br><span class="line">     * <span class="doctag">@return</span> </span><br><span class="line">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Geometry <span class="title">unionGeo</span><span class="params">(Geometry a,Geometry b)</span></span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> a.union(b);  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    <span class="comment">/** </span><br><span class="line">     * 在A几何对象中有的，但是B几何对象中没有 </span><br><span class="line">     * <span class="doctag">@param</span> a </span><br><span class="line">     * <span class="doctag">@param</span> b </span><br><span class="line">     * <span class="doctag">@return</span> </span><br><span class="line">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Geometry <span class="title">differenceGeo</span><span class="params">(Geometry a,Geometry b)</span></span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> a.difference(b);  </span><br><span class="line">    &#125; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 获取线的长度，默认坐标为：坐标值为北京2000坐标系</span><br><span class="line">     * <span class="doctag">@param</span> line</span><br><span class="line">     * <span class="doctag">@return</span></span><br><span class="line">     * <span class="doctag">@throws</span> TransformException </span><br><span class="line">     * <span class="doctag">@throws</span> FactoryException </span><br><span class="line">     * <span class="doctag">@throws</span> MismatchedDimensionException </span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">getLengthLonLat</span><span class="params">(LineString line)</span> <span class="keyword">throws</span> MismatchedDimensionException, FactoryException, TransformException</span>&#123;</span><br><span class="line">    	Coordinate []points=line.getCoordinates();</span><br><span class="line">    	List&lt;Coordinate&gt; pointsList=<span class="keyword">new</span> ArrayList&lt;Coordinate&gt;();</span><br><span class="line">    	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;points.length;i++)&#123;</span><br><span class="line">    		Coordinate point=lonLatToXY(points[i]);</span><br><span class="line">    		pointsList.add(point);</span><br><span class="line">    	&#125;</span><br><span class="line">    	LineString lineXY=createLine(pointsList);</span><br><span class="line">    	<span class="keyword">return</span> lineXY.getLength();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 获取线的长度，默认坐标为平面坐标系</span><br><span class="line">     * <span class="doctag">@param</span> line</span><br><span class="line">     * <span class="doctag">@return</span></span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">getLengthXY</span><span class="params">(LineString line)</span></span>&#123;</span><br><span class="line">    	<span class="keyword">return</span> line.getLength();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 获取多边形面积，输入坐标系为北京2000经纬度坐标系</span><br><span class="line">     * <span class="doctag">@param</span> polygon</span><br><span class="line">     * <span class="doctag">@return</span></span><br><span class="line">     * <span class="doctag">@throws</span> MismatchedDimensionException</span><br><span class="line">     * <span class="doctag">@throws</span> FactoryException</span><br><span class="line">     * <span class="doctag">@throws</span> TransformException</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">getAreaLonLat</span><span class="params">(Polygon polygon)</span> <span class="keyword">throws</span> MismatchedDimensionException, FactoryException, TransformException</span>&#123;</span><br><span class="line">    	Coordinate []points=polygon.getCoordinates();</span><br><span class="line">    	List&lt;Coordinate&gt; pointsList=<span class="keyword">new</span> ArrayList&lt;Coordinate&gt;();</span><br><span class="line">    	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;points.length;i++)&#123;</span><br><span class="line">    		Coordinate point=lonLatToXY(points[i]);</span><br><span class="line">    		pointsList.add(point);</span><br><span class="line">    	&#125;</span><br><span class="line">    	Polygon lineXY=createPolygon(pointsList);</span><br><span class="line">    	<span class="keyword">return</span> lineXY.getArea();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span><br><span class="line">   	 * create a Circle  创建一个圆，圆心(x,y) 半径RADIUS</span><br><span class="line">   	 * <span class="doctag">@param</span> x</span><br><span class="line">   	 * <span class="doctag">@param</span> y</span><br><span class="line">   	 * <span class="doctag">@param</span> RADIUS 单位（米）</span><br><span class="line">   	 * <span class="doctag">@return</span></span><br><span class="line">   	 */</span></span><br><span class="line">   	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Polygon <span class="title">createCircle</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y, <span class="keyword">final</span> <span class="keyword">double</span> RADIUS)</span></span>&#123;</span><br><span class="line">   		<span class="keyword">final</span> <span class="keyword">int</span> SIDES = <span class="number">32</span>;<span class="comment">//圆上面的点个数</span></span><br><span class="line">   		<span class="comment">//距离转度</span></span><br><span class="line">   		<span class="keyword">double</span> degree = RADIUS / (<span class="number">2</span> * Math.PI * <span class="number">6378137.0</span>) * <span class="number">360</span>;</span><br><span class="line"><span class="comment">//   		System.out.println("度："+degree);</span></span><br><span class="line">   	    Coordinate coords[] = <span class="keyword">new</span> Coordinate[SIDES+<span class="number">1</span>];</span><br><span class="line">   	    <span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SIDES; i++)&#123;</span><br><span class="line">   	        <span class="keyword">double</span> angle = ((<span class="keyword">double</span>) i / (<span class="keyword">double</span>) SIDES) * Math.PI * <span class="number">2.0</span>;</span><br><span class="line">   	        <span class="keyword">double</span> dx = Math.cos( angle ) * degree;</span><br><span class="line">   	        <span class="keyword">double</span> dy = Math.sin( angle ) * degree;</span><br><span class="line">   	        coords[i] = <span class="keyword">new</span> Coordinate( (<span class="keyword">double</span>) x + dx, (<span class="keyword">double</span>) y + dy );</span><br><span class="line">   	    &#125;</span><br><span class="line">   	    coords[SIDES] = coords[<span class="number">0</span>];</span><br><span class="line">   	    LinearRing ring = geometryFactory.createLinearRing( coords );</span><br><span class="line">   	    Polygon polygon = geometryFactory.createPolygon( ring, <span class="keyword">null</span> );</span><br><span class="line">   	    <span class="keyword">return</span> polygon;</span><br><span class="line">   	&#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 将经纬度的点坐标转换为平面坐标</span><br><span class="line">     * <span class="doctag">@param</span> point</span><br><span class="line">     * <span class="doctag">@return</span></span><br><span class="line">     * <span class="doctag">@throws</span> FactoryException </span><br><span class="line">     * <span class="doctag">@throws</span> TransformException </span><br><span class="line">     * <span class="doctag">@throws</span> MismatchedDimensionException </span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Coordinate <span class="title">lonLatToXY</span><span class="params">(Coordinate coordinate)</span> <span class="keyword">throws</span> FactoryException, MismatchedDimensionException, TransformException</span>&#123;</span><br><span class="line">    	Hints hint = <span class="keyword">new</span> Hints(Hints.LENIENT_DATUM_SHIFT, <span class="keyword">true</span>);</span><br><span class="line">    	CoordinateReferenceSystem sourceCRS = crsFactory.createFromWKT(GCS_China_2000);</span><br><span class="line">        CoordinateReferenceSystem targetCRS = crsFactory.createFromWKT(Mercator_XY_WKT);</span><br><span class="line">    	CoordinateOperationFactory coFactory = ReferencingFactoryFinder.getCoordinateOperationFactory(hint);</span><br><span class="line">        CoordinateOperation co = coFactory.createOperation(sourceCRS,targetCRS);</span><br><span class="line">        MathTransform transform = co.getMathTransform();</span><br><span class="line">        <span class="keyword">double</span> x = coordinate.x;</span><br><span class="line">    	<span class="keyword">double</span> y = coordinate.y;</span><br><span class="line">    	DirectPosition point = <span class="keyword">new</span> GeneralDirectPosition(x, y);</span><br><span class="line">    	point = transform.transform(point, point);</span><br><span class="line">    	<span class="keyword">double</span> lat = point.getOrdinate(<span class="number">0</span>);</span><br><span class="line">    	<span class="keyword">double</span> lon = point.getOrdinate(<span class="number">1</span>);</span><br><span class="line">    	<span class="keyword">return</span> createPoint(lat,lon);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span><br><span class="line">	 * <span class="doctag">@param</span> args</span><br><span class="line">	 * <span class="doctag">@throws</span> FactoryException </span><br><span class="line">	 * <span class="doctag">@throws</span> TransformException </span><br><span class="line">	 * <span class="doctag">@throws</span> MismatchedDimensionException </span><br><span class="line">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FactoryException, MismatchedDimensionException, TransformException </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		Coordinate point1=GeometryUtil.createPoint(<span class="number">116.252189</span>, <span class="number">39.9065632</span>);</span><br><span class="line">		Coordinate point2=GeometryUtil.createPoint(<span class="number">116.251977</span>, <span class="number">39.9068492</span>);</span><br><span class="line">		Coordinate point3=GeometryUtil.createPoint(<span class="number">116.252168</span>, <span class="number">39.9065392</span>);</span><br><span class="line">		Coordinate point4=GeometryUtil.createPoint(<span class="number">116.255095</span>, <span class="number">39.9066112</span>);</span><br><span class="line">		List&lt;Coordinate&gt; points=<span class="keyword">new</span> ArrayList&lt;Coordinate&gt;();</span><br><span class="line">		List&lt;Coordinate&gt; points1=<span class="keyword">new</span> ArrayList&lt;Coordinate&gt;();</span><br><span class="line">		points.add(point1);</span><br><span class="line">		points.add(point2);</span><br><span class="line">		points.add(point3);</span><br><span class="line">		points.add(point4);</span><br><span class="line">		points.add(point1);</span><br><span class="line">		points1.add(point1);</span><br><span class="line">        <span class="comment">//创建面</span></span><br><span class="line">		Polygon polygon=GeometryUtil.createPolygon(points);</span><br><span class="line">		<span class="comment">//创建线</span></span><br><span class="line">		LineString line1=GeometryUtil.createLine(points1);</span><br><span class="line">		LineString line =GeometryUtil.createLine(points);</span><br><span class="line">		<span class="comment">//获取面积和长度</span></span><br><span class="line">		System.out.println(<span class="string">"line-changdu-lonlat:"</span>+line.getLength());</span><br><span class="line">		System.out.println(<span class="string">"line-changdu-xy:"</span>+GeometryUtil.getLengthLonLat(line));</span><br><span class="line">		System.out.println(<span class="string">"polygon-mianji-lonlat:"</span>+polygon.getArea());</span><br><span class="line">		System.out.println(<span class="string">"line-changdu-xy:"</span>+GeometryUtil.getAreaLonLat(polygon));</span><br><span class="line">		System.out.println(<span class="string">"toString()---"</span>+line.toString());</span><br><span class="line">		System.out.println(<span class="string">"toString()---"</span>+line1.toString());</span><br><span class="line">		<span class="comment">//判断某个点是否在圆内</span></span><br><span class="line">		Polygon p = GeometryUtil.createCircle(<span class="number">116.1851444</span>, <span class="number">39.9269055</span>, <span class="number">200000</span>);</span><br><span class="line">		Point point=GeometryUtil.createPoint(<span class="number">119.185144</span>, <span class="number">39.9269</span>);</span><br><span class="line">		Boolean isOk=p.contains(point);</span><br><span class="line">		System.out.println(isOk);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>另外接口还包含很多关于对空间图形计算的：</strong></p>
<p>相等(Equals)：几何形状拓扑上相等。<br>脱节(Disjoint)：几何形状没有共有的点。<br>相交(Intersects)：几何形状至少有一个共有点（区别于脱节）<br>接触(Touches)：几何形状有至少一个公共的边界点，但是没有内部点。<br>交叉(Crosses)：几何形状共享一些但不是所有的内部点。<br>内含(Within)：几何形状A的线都在几何形状B内部。<br>包含(Contains)：几何形状B的线都在几何形状A内部（区别于内含）<br>重叠(Overlaps)：几何形状共享一部分但不是所有的公共点，而且相交处有他们自己相同的区域。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>GIS项目开发中用到的一个工具类<br>（依赖jar文件为<code>gt-opengis-8.0-M0.jar</code>、<code>jsr-275-1.0-beta-2.jar</code>更高版本不限定）</p>]]>
    
    </summary>
    
      <category term="GeoTools" scheme="http://giscafer.com/tags/GeoTools/"/>
    
      <category term="GeoTools" scheme="http://giscafer.com/categories/GeoTools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[前端网站性能优化14点]]></title>
    <link href="http://giscafer.com/2015/09/06/web-performance-optimization/"/>
    <id>http://giscafer.com/2015/09/06/web-performance-optimization/</id>
    <published>2015-09-06T15:28:44.000Z</published>
    <updated>2015-09-07T04:55:13.372Z</updated>
    <content type="html"><![CDATA[<p>了解前端必备的优化内容，这作为开发的标准的话，会让我们养成好的编码风格，并做到后期优化内容更少。下边是在学习前端优化记录的笔记内容。<strong>推荐书《高性能网站建设指南》</strong></p>
<h3 id="1、尽可能的减少_HTTP_请求数">1、尽可能的减少 HTTP 请求数</h3><p>前端页面初始化的时候，会在服务器下载外部文件，比如图片、js、css文件等，Http请求次数越多，消耗的时间越长，有效的将图片和js\css文件合并，减少Http的请求可以提升性能优化</p>
<a id="more"></a>
<h3 id="2、_使用CDN（内容分发网络）">2、 使用CDN（内容分发网络）</h3><p>CDN 意思是尽可能避免互联网上可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。</p>
<h3 id="3、添加Expire/Cache-Control头">3、添加Expire/Cache-Control头</h3><p><code>expire头</code>的内容是一个时间值，值就是资源的本地的过期时间、存在本地。在本地缓存阶段，找到对应的资源值，当前时间还没超过资源的过期时间，就直接使用这个资源，不会发送http请求。</p>
<p><code>Cache-Control</code>是http协议中常用的头部之一，顾名思义，他是负责控制页面缓存机制，如果该头部指示缓存，缓存的内容也会缓存在本地，操作流程和expire相似，但是也有不同的地方，cache-control有更多的选项，而且也有更多的处理方式。</p>
<h3 id="4、启用Gzip压缩">4、启用Gzip压缩</h3><p>HTML、php、js、css、xml、txt都可以使用Gzip压缩使得文件变小，提升文件传输速度。</p>
<h3 id="5、把CSS放在页面最上面">5、把CSS放在页面最上面</h3><p>为了提高浏览器的渲染性能，避免页面出现空白或者闪烁问题，应该将CSS放在页面顶部，或者head里边。</p>
<p>###6、 将script放在页面最下面</p>
<p>和DOM加载顺序有关，由于script标签的引入和加载消耗时间，而浏览器渲染的时候，CSS和script标签其实都是阻塞的，浏览器加载script的时候，下载完毕并执行，这个过程会阻塞进程。文件大的时候影响着页面的渲染速度和效果，所以将script标签放到页面底部，不影响页面的加载</p>
<h3 id="7、避免在CSS中使用Expressions">7、避免在CSS中使用Expressions</h3><p>CSS中使用Expressions，就是CSS表达式（CSS属性和JavaScript表达式）。在页面显示和缩放、页面滚动、移动的时候浏览器会计算CSS Expressions，移动鼠标的时候也会计算，这个网上可以搜到计算的方法，可以测试一下就发现很恐怖。</p>
<h3 id="8、把JavaScript和CSS都放到外部文件中">8、把JavaScript和CSS都放到外部文件中</h3><p><strong>提出来的好处</strong>：提高了js和css的复用性，减小页面体积，提高了js和css的可维护性，可作为文件被浏览器单独缓存；<br><strong>坏处</strong>：文件多的时候回增加请求数量</p>
<p><strong>放到页面好处</strong>：减少页面请求、加快页面渲染速度；<br><strong>坏处</strong>：不利于维护，可复用性差</p>
<p><strong>写在页面内的情况：</strong></p>
<pre><code>&gt; <span class="number">1</span>、只应用于一个页面
 &gt; <span class="number">2</span>、不经常被访问到
 &gt; <span class="number">3</span>、脚本和样式很少
</code></pre><h3 id="9、减少DNS查询">9、减少DNS查询</h3><p>当浏览器访问www.giscafer.com的时候，浏览器会将域名解析为IP地址，然后根据DNS查找网站服务器，这个期间会消耗时间，有些网站是将js和img等放在多域下，所以DNS查询多的时候就需要考虑减少dns查询或者缓存来解决</p>
<h3 id="10、压缩JavaScript和CSS">10、压缩JavaScript和CSS</h3><p>通过网上一些在线或者其他根据来压缩js、css文件，已减少文件体积，提升网页下载文件速度；</p>
<h3 id="11、避免重定向">11、避免重定向</h3><p>http协议中重定向有301（页面被移动到了另外的位置）和302（被找到了）两种状态码。<br>另外301表示永久重定向，302表示临时重定向。对搜索引擎来说，爬虫会不定期的搜索站点，如果站点使用了301重定向，搜索引擎会将（a——&gt;b）b记录下来，删除a不再去爬虫。<br>当然，简单的从重定向来看，在这个过程中会消耗时间，所以不使用的话就尽量避免；另外特别注意的细微差别是，比如<a href="http://giscafer.com这个地址，就暗藏了重定向了，正确的为http://giscafer.com/才是直接访问的。其他的地址类似，一般后边加上`/`" target="_blank" rel="external">http://giscafer.com这个地址，就暗藏了重定向了，正确的为http://giscafer.com/才是直接访问的。其他的地址类似，一般后边加上`/`</a></p>
<h3 id="12、移除重复的脚本">12、移除重复的脚本</h3><p>这也是个编码习惯和质量的问题；当重复的脚本下有相同的全局变量时，这个会影响到其他代码，或者是被全局污染了。js前端代码如果使用模块化管理的方式的话就避免了污染的情况。</p>
<h3 id="13、配置实体标签（ETag）">13、配置实体标签（ETag）</h3><p>ETag——Entity Tag（实体标签），属于HTTP协议，受Web服务支持。使用特殊的字符串，来标识某个请求资源版本<br><img src="http://giscafer.github.io/static/img/web-performance-optimization13.png" alt="浏览器和服务器交流"><br>当每次Http请求的时候，服务器会判断该次请求的数据是否做过修改，如果没有修改过，则返回304状态码告诉浏览器，浏览器继续使用原来版本的资源，如果修改过了，则重新ETag标识，此时返回状态码是200。</p>
<h3 id="14、使AJAX缓存">14、使AJAX缓存</h3><p>Ajax请求也是会消耗时间的，所以有时候也是需要缓存，但AJAX的POST请求的时候，是不被缓存的，而GET请求时可以被缓存的。<br><img src="http://giscafer.github.io/static/img/web-performance-optimization15.png" alt="POST和GET的区别"></p>
<h3 id="15、Yslow网站性能优化工具">15、Yslow网站性能优化工具</h3><p>最后推荐Yslow工具，其实基于Firebug上使用的，如果是使用Firefox浏览器可以直接安装插件，Google chrome的话先安装FirebugLiteforChrome插件再安装Yslow</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>了解前端必备的优化内容，这作为开发的标准的话，会让我们养成好的编码风格，并做到后期优化内容更少。下边是在学习前端优化记录的笔记内容。<strong>推荐书《高性能网站建设指南》</strong></p>
<h3 id="1、尽可能的减少_HTTP_请求数">1、尽可能的减少 HTTP 请求数</h3><p>前端页面初始化的时候，会在服务器下载外部文件，比如图片、js、css文件等，Http请求次数越多，消耗的时间越长，有效的将图片和js\css文件合并，减少Http的请求可以提升性能优化</p>]]>
    
    </summary>
    
      <category term="前端优化" scheme="http://giscafer.com/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
      <category term="前端优化" scheme="http://giscafer.com/categories/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[SeaJS配置使用学习笔记]]></title>
    <link href="http://giscafer.com/2015/09/05/seajs-intro/"/>
    <id>http://giscafer.com/2015/09/05/seajs-intro/</id>
    <published>2015-09-05T14:48:47.000Z</published>
    <updated>2015-09-05T15:28:43.095Z</updated>
    <content type="html"><![CDATA[<p>SeaJS确实简单，看<a href="http://seajs.org" target="_blank" rel="external">官网</a>介绍只需要5分钟就可以基本了解其使用方法，但是中间也有坑，官方文档并没有介绍很详细，这坑可能在你用了SeaJS后才会遇到。<br><a id="more"></a></p>
<p>SeaJS在使用之前必须要一段配置代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">seajs.config(&#123;</span><br><span class="line">           <span class="comment">//遵循seajs的ID和路径原则：https://github.com/seajs/seajs/issues/930</span></span><br><span class="line">           base: <span class="string">"./"</span>,</span><br><span class="line">           <span class="comment">//设置路径，方便跨目录调用</span></span><br><span class="line">           paths:&#123;</span><br><span class="line">               <span class="comment">//应用模块</span></span><br><span class="line">               <span class="string">'app'</span>: <span class="string">'app'</span>,</span><br><span class="line">               <span class="comment">//类库</span></span><br><span class="line">               <span class="string">'module'</span>: <span class="string">'sea-modules'</span>,</span><br><span class="line">               <span class="comment">//通用模块</span></span><br><span class="line">               <span class="string">'common'</span>: <span class="string">'common'</span></span><br><span class="line">           &#125;,</span><br><span class="line">           <span class="comment">//别名配置，配置之后可在模块中使用require调用 require('jquery');</span></span><br><span class="line">           alias: &#123;</span><br><span class="line">               <span class="comment">//此路径下的【module】映射是上边paths中的module，也就是</span></span><br><span class="line">               <span class="comment">//翻译为sea-modules/jquery/jquery/1.10.1/jquery.js</span></span><br><span class="line">               <span class="string">"jquery"</span>: <span class="string">"module/jquery/jquery/1.10.1/jquery.js"</span></span><br><span class="line">           &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>其中，<code>base</code>路径很重要，Sea.js 在解析顶级标识时，会相对 base 路径来解析，require加载模块时查找路径也和此相关。也就是你sea.js放置的位置要合适，使得路径简单些。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// 调用定义模块</span></span><br><span class="line">seajs.use([<span class="string">'jquery'</span>,<span class="string">'js/test'</span>], <span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'jquery'</span>, $)</span><br><span class="line">    $(<span class="string">'#hhhh'</span>).html(<span class="string">'Hello SeaJS'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><strong>test.js文件代码</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params">require, exports, module</span>) </span>&#123;</span><br><span class="line"><span class="comment">//加载commonUtil模块（上班paths映射common为common。故目录为：common/commonUtil）</span></span><br><span class="line"><span class="built_in">window</span>.c = <span class="built_in">require</span>(<span class="string">'common/commonUtil'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'c'</span>, c);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>其实中间是有坑的，<code>juery</code>就是一个坑，如果修改了<code>base</code>，路径的改变就要求你需要改变你定义的一些模块的id，不然会在<code>var a=require（&#39;modulename&#39;);</code>的时候a为<code>null</code>。比如修改jquery模块下额id<br><img src="http://giscafer.github.io/static/img/seajs-intro01.png" alt="base路径改变后需要修改jquery的id"></p>
<p><img src="http://giscafer.github.io/static/img/seajs-intro02.png" alt="基本结构"><br>详情请看：<a href="https://github.com/seajs/seajs/issues/930" target="_blank" rel="external">https://github.com/seajs/seajs/issues/930</a><br><code>很多坑前辈都是走过的，我们可以搜索参考他们的解决办法</code></p>
<p>》》》》》》<a href="http://giscafer.github.io/static/uploadfile/seajs-intro-demo.zip" target="_blank" rel="external">demo下载</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>SeaJS确实简单，看<a href="http://seajs.org">官网</a>介绍只需要5分钟就可以基本了解其使用方法，但是中间也有坑，官方文档并没有介绍很详细，这坑可能在你用了SeaJS后才会遇到。<br>]]>
    
    </summary>
    
      <category term="SeaJS" scheme="http://giscafer.com/tags/SeaJS/"/>
    
      <category term="SeaJS" scheme="http://giscafer.com/categories/SeaJS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo添加归档widget并扩展展开和收起功能]]></title>
    <link href="http://giscafer.com/2015/09/03/hexo-archive-setting/"/>
    <id>http://giscafer.com/2015/09/03/hexo-archive-setting/</id>
    <published>2015-09-03T06:15:05.000Z</published>
    <updated>2015-09-05T15:34:42.794Z</updated>
    <content type="html"><![CDATA[<h3 id="1、以下是添加archvie（归档）模块代码：">1、以下是添加archvie（归档）模块代码：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="title">%</span> <span class="attribute">if</span> (<span class="attribute">site.posts.length</span>)&#123; %&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"archive_side"</span> <span class="attribute">class</span>=<span class="value">"widget tag"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"&lt;%- config.root %&gt;archives"</span>&gt;</span><span class="tag">&lt;<span class="title">%=</span> <span class="attribute">__</span>('<span class="attribute">archive_a</span>') %&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">   	 <span class="tag">&lt;<span class="title">%-</span> <span class="attribute">list_archives</span>(&#123;'<span class="attribute">display_count</span>'<span class="attribute">:2</span>&#125;) %&gt;</span><span class="comment">&lt;!--此处的代码是扩展--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">%</span> <span class="attribute">if</span> (<span class="attribute">site.posts.length</span>&gt;</span>3)&#123; %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="title">%&#125;</span> %&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>list_archives({&#39;display_count&#39;:2}</code>这句话中传的参数是扩展的，下边会介绍</p>
<a id="more"></a>
<h3 id="2、修改list_archives-js接口文件">2、修改list_archives.js接口文件</h3><p>找到目录下<code>\node_modules\hexo\lib\plugins\helper\list_archives.js</code>文件，用下边代码替换：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">listArchivesHelper</span>(<span class="params">options</span>)</span>&#123;</span><br><span class="line">  <span class="comment">/* jshint validthis: true */</span></span><br><span class="line">  options = options || &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span><br><span class="line">  <span class="keyword">var</span> archiveDir = config.archive_dir;</span><br><span class="line">  <span class="keyword">var</span> timezone = config.timezone;</span><br><span class="line">  <span class="keyword">var</span> lang = <span class="keyword">this</span>.page.lang || <span class="keyword">this</span>.page.language || config.language;</span><br><span class="line">  <span class="keyword">var</span> format = options.format;</span><br><span class="line">  <span class="keyword">var</span> type = options.type || <span class="string">'monthly'</span>;</span><br><span class="line">  <span class="keyword">var</span> style = options.hasOwnProperty(<span class="string">'style'</span>) ? options.style : <span class="string">'list'</span>;</span><br><span class="line">  <span class="keyword">var</span> showCount = options.hasOwnProperty(<span class="string">'show_count'</span>) ? options.show_count : <span class="literal">true</span>;</span><br><span class="line">  <span class="comment">//下边这句是扩展的代码，用来通过传参控制归档时间显示数量</span></span><br><span class="line">  <span class="keyword">var</span> displayCount = options.hasOwnProperty(<span class="string">'display_count'</span>) ? options.display_count : <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">var</span> transform = options.transform;</span><br><span class="line">  <span class="keyword">var</span> separator = options.hasOwnProperty(<span class="string">'separator'</span>) ? options.separator : <span class="string">', '</span>;</span><br><span class="line">  <span class="keyword">var</span> className = options.class || <span class="string">'archive'</span>;</span><br><span class="line">  <span class="keyword">var</span> order = options.order || -<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">var</span> result = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!format)&#123;</span><br><span class="line">    format = type === <span class="string">'monthly'</span> ? <span class="string">'MMMM YYYY'</span> : <span class="string">'YYYY'</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> posts = <span class="keyword">this</span>.site.posts.sort(<span class="string">'date'</span>, order);</span><br><span class="line">  <span class="keyword">if</span> (!posts.length) <span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> data = [];</span><br><span class="line">  <span class="keyword">var</span> length = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  posts.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">post</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// Clone the date object to avoid pollution</span></span><br><span class="line">    <span class="keyword">var</span> date = post.date.clone();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (timezone) date = date.tz(timezone);</span><br><span class="line">    <span class="keyword">if</span> (lang) date = date.locale(lang);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> year = date.year();</span><br><span class="line">    <span class="keyword">var</span> month = date.month() + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> name = date.format(format);</span><br><span class="line">    <span class="keyword">var</span> lastData = data[length - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!lastData || lastData.name !== name)&#123;</span><br><span class="line">      length = data.push(&#123;</span><br><span class="line">        name: name,</span><br><span class="line">        year: year,</span><br><span class="line">        month: month,</span><br><span class="line">        count: <span class="number">1</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      lastData.count++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">link</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> url = archiveDir + <span class="string">'/'</span> + item.year + <span class="string">'/'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (type === <span class="string">'monthly'</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span> (item.month &lt; <span class="number">10</span>) url += <span class="string">'0'</span>;</span><br><span class="line">      url += item.month + <span class="string">'/'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> self.url_for(url);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> item, i, len;</span><br><span class="line">  <span class="comment">//下边这句是新增代码</span></span><br><span class="line">  <span class="keyword">var</span> divStr=<span class="string">'&lt;div id="archivelist_display" style="display:none;"&gt;'</span>;</span><br><span class="line">  <span class="keyword">if</span> (style === <span class="string">'list'</span>)&#123;</span><br><span class="line">    result += <span class="string">'&lt;ul class="'</span> + className + <span class="string">'-list"&gt;'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, len = data.length; i &lt; len; i++)&#123;</span><br><span class="line">    <span class="comment">//&gt;&gt;&gt;修改部分，如果数量大于设置的数值，就添加展示按钮</span></span><br><span class="line">      <span class="keyword">if</span>(displayCount &amp;&amp; len&gt;(displayCount+<span class="number">1</span>))&#123;</span><br><span class="line">        item = data[i];</span><br><span class="line"></span><br><span class="line">        divStr += <span class="string">'&lt;li class="'</span> + className + <span class="string">'-list-item"&gt;'</span>;</span><br><span class="line"></span><br><span class="line">        divStr += <span class="string">'&lt;a class="'</span> + className + <span class="string">'-list-link" href="'</span> + link(item) + <span class="string">'"&gt;'</span>;</span><br><span class="line">        divStr += transform ? transform(item.name) : item.name;</span><br><span class="line">        divStr += <span class="string">'&lt;/a&gt;'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (showCount)&#123;</span><br><span class="line">          divStr += <span class="string">'&lt;span class="'</span> + className + <span class="string">'-list-count"&gt;'</span> + item.count + <span class="string">'&lt;/span&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        divStr += <span class="string">'&lt;/li&gt;'</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        item = data[i];</span><br><span class="line"></span><br><span class="line">        result += <span class="string">'&lt;li class="'</span> + className + <span class="string">'-list-item"&gt;'</span>;</span><br><span class="line"></span><br><span class="line">        result += <span class="string">'&lt;a class="'</span> + className + <span class="string">'-list-link" href="'</span> + link(item) + <span class="string">'"&gt;'</span>;</span><br><span class="line">        result += transform ? transform(item.name) : item.name;</span><br><span class="line">        result += <span class="string">'&lt;/a&gt;'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (showCount)&#123;</span><br><span class="line">          result += <span class="string">'&lt;span class="'</span> + className + <span class="string">'-list-count"&gt;'</span> + item.count + <span class="string">'&lt;/span&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        result += <span class="string">'&lt;/li&gt;'</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(displayCount &amp;&amp; len&gt;displayCount)&#123;</span><br><span class="line">         divStr += <span class="string">'&lt;/div&gt;&lt;div id="archive_list_button" class="list_closed"&gt;展开&lt;/div&gt;'</span>;</span><br><span class="line">         result += divStr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//&lt;&lt;&lt;&lt;修改部分</span></span><br><span class="line">    result += <span class="string">'&lt;/ul&gt;'</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, len = data.length; i &lt; len; i++)&#123;</span><br><span class="line">      item = data[i];</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (i) result += separator;</span><br><span class="line"></span><br><span class="line">      result += <span class="string">'&lt;a class="'</span> + className + <span class="string">'-link" href="'</span> + link(item) + <span class="string">'"&gt;'</span>;</span><br><span class="line">      result += transform ? transform(item.name) : item.name;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (showCount)&#123;</span><br><span class="line">        result += <span class="string">'&lt;span class="'</span> + className + <span class="string">'-count"&gt;'</span> + item.count + <span class="string">'&lt;/span&gt;'</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      result += <span class="string">'&lt;/a&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = listArchivesHelper;</span><br></pre></td></tr></table></figure>
<p>扩展简单，就是根据传入的数值来控制默认只显示多少行归档li</p>
<h3 id="3、添加图片和样式">3、添加图片和样式</h3><p>在<code>blog\\source\static\css</code>下新增自己的样式文件custom.css<br><strong>样式代码：</strong><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="id">#archive_side</span> <span class="class">.archive-list</span> <span class="class">.list_closed</span>,</span><br><span class="line"><span class="id">#archive_side</span> <span class="class">.archive-list</span> <span class="class">.list_opended</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">display</span>:<span class="value"> inline-block</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#666</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">padding-right</span>:<span class="value"> <span class="number">20px</span></span></span>;</span><br><span class="line">  <span class="comment">/**图片文件**/</span></span><br><span class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">url</span>(<span class="string">"../img/icon-arrow.png"</span>) no-repeat right bottom</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">cursor</span>:<span class="value"> pointer</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="id">#archive_side</span> <span class="class">.archive-list</span> <span class="class">.list_opended</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">background-position</span>:<span class="value"> right top</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>然后在<code>blog\themes\{自己的主题}\layout\_partial\head.ejs</code>下引入样式文件</p>
<pre><code><span class="xml"><span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">href</span>=<span class="value">"</span></span></span>&lt;%-<span class="ruby"> config.root </span>%&gt;<span class="xml"><span class="tag"><span class="value">static/css/custom.css"</span> <span class="attribute">media</span>=<span class="value">"screen"</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span></span>
</code></pre><h3 id="4、添加js代码">4、添加js代码</h3><p> 在<code>blog\source\static\js\</code>下新增common.js文件，功能：点击展开和收起的事件处理逻辑</p>
<p><strong>代码如下：</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">   (<span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>&#123;</span><br><span class="line">$(<span class="string">'#archive_list_button'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>($(<span class="keyword">this</span>).hasClass(<span class="string">"list_closed"</span>))&#123;</span><br><span class="line">		$(<span class="string">"#archivelist_display"</span>).show();</span><br><span class="line">		$(<span class="string">"#archive_list_button"</span>).html(<span class="string">'收起'</span>);</span><br><span class="line">		$(<span class="keyword">this</span>).removeClass(<span class="string">"list_closed"</span>).addClass(<span class="string">"list_opended"</span>);</span><br><span class="line">		</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		$(<span class="string">"#archivelist_display"</span>).hide();</span><br><span class="line">		$(<span class="string">"#archive_list_button"</span>).html(<span class="string">'展开'</span>);</span><br><span class="line">		$(<span class="keyword">this</span>).removeClass(<span class="string">"list_opended"</span>).addClass(<span class="string">"list_closed"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;);</span><br><span class="line">   &#125;)(jQuery);</span><br></pre></td></tr></table></figure></p>
<h3 id="5、结束">5、结束</h3><p><code>hexo s</code>启动项目，本地localhost:4000就可以看到效果了。如图：</p>
<p><img src="https://giscafer.github.io/static/img/hexo-archive-setting01.png" alt="展开"><br><img src="https://giscafer.github.io/static/img/hexo-archive-setting02.png" alt="收起"></p>
<p>具体效果见<a href="http://giscafer.com">博客站点</a>右侧归档</p>
<p>总结：了解NodeJS和EJS模板引擎，以及Hexo的工作原理，就会发现简单的多了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1、以下是添加archvie（归档）模块代码：">1、以下是添加archvie（归档）模块代码：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="title">%</span> <span class="attribute">if</span> (<span class="attribute">site.posts.length</span>)&#123; %&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"archive_side"</span> <span class="attribute">class</span>=<span class="value">"widget tag"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"&lt;%- config.root %&gt;archives"</span>&gt;</span><span class="tag">&lt;<span class="title">%=</span> <span class="attribute">__</span>('<span class="attribute">archive_a</span>') %&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">   	 <span class="tag">&lt;<span class="title">%-</span> <span class="attribute">list_archives</span>(&#123;'<span class="attribute">display_count</span>'<span class="attribute">:2</span>&#125;) %&gt;</span><span class="comment">&lt;!--此处的代码是扩展--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">%</span> <span class="attribute">if</span> (<span class="attribute">site.posts.length</span>&gt;</span>3)&#123; %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="title">%&#125;</span> %&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>list_archives({&#39;display_count&#39;:2}</code>这句话中传的参数是扩展的，下边会介绍</p>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://giscafer.com/tags/Hexo/"/>
    
      <category term="Hexo" scheme="http://giscafer.com/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[NodeJS 学习笔记]]></title>
    <link href="http://giscafer.com/2015/08/20/nodejs-study-note/"/>
    <id>http://giscafer.com/2015/08/20/nodejs-study-note/</id>
    <published>2015-08-20T12:46:25.000Z</published>
    <updated>2015-09-02T18:06:35.472Z</updated>
    <content type="html"><![CDATA[<h3 id="【CommonJS\CMD\AMD\NODEJS与JavaScript】">【CommonJS\CMD\AMD\NODEJS与JavaScript】</h3><p>CMD是国内玉伯大神在开发SeaJS的时候提出来的，属于CommonJS的一种规范，此外还有AMD，其对于的框架是RequireJS:<br>1、二者都是异步模块定义（Asynchronuous Module Definition）的一个实现；<br>2、CMD和AMD都是CommonJS的一种规范的实现定义，RequireJS和SeaJS是对应的实践；<br>3、CMD和AMD的区别:CMD相当于按需加载，定义一个模块的时候不需要立即制定依赖模块，在需要的时候require就可以了，比较方便；而AMD则相反，定义模块的时候需要制定依赖模块，并以形参的方式引入factory中。<br><a id="more"></a></p>
<pre><code><span class="comment">//AMD方式定义模块</span>
define([<span class="string">'dep1'</span>,<span class="string">'dep2'</span>],<span class="function"><span class="keyword">function</span>(<span class="params">dep1,dep2</span>)</span>{
     <span class="comment">//内部只能使用制定的模块</span>
      <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{};
});
<span class="comment">//CMD</span>
define(<span class="function"><span class="keyword">function</span>(<span class="params">require,exports,module</span>)</span>{
   <span class="comment">//此处如果需要某XX模块，可以引入</span>
   <span class="keyword">var</span> xx=<span class="built_in">require</span>(<span class="string">'XX'</span>);
});
</code></pre><p>4、JavaScript语言是弱结构性的，通过CommonJS定义一些规范，CMD和AMD得定义模块的方式对代码进行管理，使得更易维护；此外，NodeJS的诞生，对模块的规范定义，和包（npm）的概念的引入，让JS管理不再困难，一个字，爽爆了！</p>
<hr>
<h3 id="一、常用的Module地址">一、常用的Module地址</h3><p><code>个人开发中用到的模块，记下有时间了解</code></p>
<p><strong>utility</strong> <a href="https://www.npmjs.com/package/utility" target="_blank" rel="external">A collection of useful utilities.</a> </p>
<p><strong>bcrypt</strong> <a href="https://www.npmjs.com/package/bcrypt" target="_blank" rel="external">A bcrypt library for NodeJS.</a> </p>
<p><strong>node-uuid</strong> <a href="https://www.npmjs.com/package/node-uuid" target="_blank" rel="external">生成uuid的模块</a></p>
<p><strong>eventproxy</strong> <a href="https://www.npmjs.com/package/eventproxy" target="_blank" rel="external">An implementation of task/event based asynchronous pattern.</a></p>
<p><strong>nodemailer</strong> <a href="https://www.npmjs.com/package/nodemailer" target="_blank" rel="external">Easy as cake e-mail sending from your Node.js applications</a><br><strong>nodemailer-smtp-transport</strong> <a href="https://github.com/andris9/nodemailer-smtp-transport" target="_blank" rel="external">（nodemailer1.0以上需要此辅助）https://github.com/andris9/nodemailer-smtp-transport</a></p>
<p><strong>moment</strong> <a href="https://www.npmjs.com/package/moment" target="_blank" rel="external">Parse, validate, manipulate, and display dates</a></p>
<p><strong>node-inspector</strong> <a href="https://www.npmjs.com/package/node-inspector" target="_blank" rel="external">Web Inspector based nodeJS debugger</a></p>
<p><strong>connect-mongodb</strong> <a href="https://www.npmjs.com/package/connect-mongodb" target="_blank" rel="external">mongodb session store for connect</a></p>
<p><strong>cookie-parser</strong> <a href="https://www.npmjs.com/package/cookie-parser" target="_blank" rel="external">cookie parsing with signatures</a></p>
<p><strong>express-session</strong>  <a href="https://www.npmjs.com/package/express-session" target="_blank" rel="external">Simple session middleware for Express</a></p>
<p><strong>body-parser</strong> <a href="https://www.npmjs.com/package/body-parser" target="_blank" rel="external">Node.js body parsing middleware</a></p>
<p><strong>lodash</strong> <a href="https://lodash.com/" target="_blank" rel="external">由Underscore.js演变成的好用工具</a></p>
<p><strong>connect-multiparty</strong> <a href="https://www.npmjs.com/package/connect-multiparty" target="_blank" rel="external">multipart parsing middleware for connect using multiparty</a></p>
<p><strong>grunt-mocha-test</strong> <a href="https://www.npmjs.com/package/grunt-mocha-test" target="_blank" rel="external">【单元测试】A grunt task for running server side mocha tests</a></p>
<hr>
<h3 id="二、Grunt集成自动重启">二、Grunt集成自动重启</h3><p>1、安装grunt环境： <code>npm install grunt -g</code>和<code>npm install grunt-cli -g</code><br>2、安装 <code>npm install grunt-contrib-watch --save-dev</code><br>3、安装 <code>npm grunt-concurrent --save-dev</code><br>4、安装 <code>npm grunt-contrib-watch --save-dev</code><br>5、安装 <code>npm grunt-nodemon --save-dev</code><br>(–save-dev会将该模块信息保存到package.json里边)<br><a href="http://blog.csdn.net/allgis/article/details/46572815" target="_blank" rel="external">Nodemon和Grunt-Contrib-Watch: 有什么不同?</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="【CommonJS\CMD\AMD\NODEJS与JavaScript】">【CommonJS\CMD\AMD\NODEJS与JavaScript】</h3><p>CMD是国内玉伯大神在开发SeaJS的时候提出来的，属于CommonJS的一种规范，此外还有AMD，其对于的框架是RequireJS:<br>1、二者都是异步模块定义（Asynchronuous Module Definition）的一个实现；<br>2、CMD和AMD都是CommonJS的一种规范的实现定义，RequireJS和SeaJS是对应的实践；<br>3、CMD和AMD的区别:CMD相当于按需加载，定义一个模块的时候不需要立即制定依赖模块，在需要的时候require就可以了，比较方便；而AMD则相反，定义模块的时候需要制定依赖模块，并以形参的方式引入factory中。<br>]]>
    
    </summary>
    
      <category term="NodeJS" scheme="http://giscafer.com/tags/NodeJS/"/>
    
      <category term="npm" scheme="http://giscafer.com/tags/npm/"/>
    
      <category term="NodeJS" scheme="http://giscafer.com/categories/NodeJS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo博客中多说插件的配置使用]]></title>
    <link href="http://giscafer.com/2014/10/02/hexo-duoshuo/"/>
    <id>http://giscafer.com/2014/10/02/hexo-duoshuo/</id>
    <published>2014-10-02T08:43:15.000Z</published>
    <updated>2015-09-03T11:22:05.099Z</updated>
    <content type="html"><![CDATA[<p>多说中的几个配置如下</p>
<p> 1.</p>
<pre><code>&lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"ds-thread"</span> data-thread-key=<span class="string">"请将此处替换成文
章在你的站点中的ID"</span> data-title=<span class="string">"请替换成文章的标题"</span> data-url=<span class="string">"请替换成文章的网址"</span>&gt;&lt;/<span class="keyword">div</span>&gt;
</code></pre><p>2.<br>   <code>{short_name:&quot;二级域名（*.duoshuo.com）&quot;}</code>，只需要填二级域名缩写，也就是*号部分！</p>
<a id="more"></a>
<p>多说文章评论配置，hexo博客的都可以参考以下的配置</p>
<pre><code><span class="xml"></span>&lt;%<span class="ruby"> <span class="keyword">if</span> (theme.duoshuo.enable &amp;&amp; page.comments){ </span>%&gt;<span class="xml">

<span class="comment">&lt;!-- 多说评论框 start --&gt;</span>
<span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"ds-thread"</span> <span class="attribute">data-thread-key</span>=<span class="value">"</span></span></span>&lt;%-<span class="ruby"> config.root </span>%&gt;<span class="xml"><span class="tag"><span class="value"></span></span></span>&lt;%-<span class="ruby"> item.path</span>%&gt;<span class="xml"><span class="tag"><span class="value">"</span> <span class="attribute">data-title</span>=<span class="value">"</span></span></span>&lt;%-<span class="ruby"> item.title </span>%&gt;<span class="xml"><span class="tag"><span class="value">"</span> <span class="attribute">data-url</span>=<span class="value">"</span></span></span>&lt;%-<span class="ruby"> item.permalink </span>%&gt;<span class="xml"><span class="tag"><span class="value">"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
<span class="comment">&lt;!-- 多说评论框 end --&gt;</span>
<span class="comment">&lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;</span>
<span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript">
<span class="keyword">var</span> duoshuoQuery = {short_name:<span class="string">"giscafe"</span>};
(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{
    <span class="keyword">var</span> ds = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);
    ds.type = <span class="string">'text/javascript'</span>;ds.async = <span class="literal">true</span>;
    ds.src = (<span class="built_in">document</span>.location.protocol == <span class="string">'https:'</span> ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">'//static.duoshuo.com/embed.js'</span>;
    ds.charset = <span class="string">'UTF-8'</span>;
    (<span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>] 
     || <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>]).appendChild(ds);
})();
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
<span class="comment">&lt;!-- 多说公共JS代码 end --&gt;</span>
</span>&lt;%<span class="ruby"> } </span>%&gt;<span class="xml"></span>
</code></pre><p>将修改好的代码放到theme\主题名称\layout_partial\comment.ejs下即可。（有些主题可能位置不一样，其他位置找到即可。）</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>多说中的几个配置如下</p>
<p> 1.</p>
<pre><code>&lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"ds-thread"</span> data-thread-key=<span class="string">"请将此处替换成文
章在你的站点中的ID"</span> data-title=<span class="string">"请替换成文章的标题"</span> data-url=<span class="string">"请替换成文章的网址"</span>&gt;&lt;/<span class="keyword">div</span>&gt;
</code></pre><p>2.<br>   <code>{short_name:&quot;二级域名（*.duoshuo.com）&quot;}</code>，只需要填二级域名缩写，也就是*号部分！</p>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://giscafer.com/tags/Hexo/"/>
    
      <category term="Hexo" scheme="http://giscafer.com/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HTTP状态码]]></title>
    <link href="http://giscafer.com/2014/05/27/http-status/"/>
    <id>http://giscafer.com/2014/05/27/http-status/</id>
    <published>2014-05-27T07:35:41.000Z</published>
    <updated>2015-09-05T15:24:17.220Z</updated>
    <content type="html"><![CDATA[<p>###HTTP状态码</p>
<p>HTTP状态码（HTTP Status Code）是用以表示网页服务器HTTP响应状态的 3 位数字代码。</p>
<h3 id="0（无法访问）">0（无法访问）</h3><a id="more"></a>
<p>代码 说明</p>
<p>0     （无法访问）无法连接服务器或者域名不存在。</p>
<h3 id="1xx（临时响应）">1xx（临时响应）</h3><p>表示临时响应并需要请求者继续执行操作的状态代码。</p>
<p>代码 说明</p>
<p>100 （继续） 请求者应当继续提出请求。 服务器返回此代码表示已收到请求的第一部分，正在等待其余部分。</p>
<p>101 （切换协议） 请求者已要求服务器切换协议，服务器已确认并准备切换。</p>
<h3 id="2xx_（成功）">2xx （成功）</h3><p>表示成功处理了请求的状态代码。</p>
<p> 代码 说明 </p>
<p>200 （成功） 服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。</p>
<p>201 （已创建） 请求成功并且服务器创建了新的资源。</p>
<p>202 （已接受） 服务器已接受请求，但尚未处理。</p>
<p>203 （非授权信息） 服务器已成功处理了请求，但返回的信息可能来自另一来源。</p>
<p>204 （无内容） 服务器成功处理了请求，但没有返回任何内容。</p>
<p>205 （重置内容） 服务器成功处理了请求，但没有返回任何内容。</p>
<p>206 （部分内容） 服务器成功处理了部分 GET 请求。</p>
<h3 id="3xx_（重定向）">3xx （重定向）</h3><p>表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。</p>
<p> 代码 说明 </p>
<p>300 （多种选择） 针对请求，服务器可执行多种操作。 服务器可根据请求者 (user agent) 选择一项操作，或提供操作列表供请求者选择。</p>
<p>301 （永久移动） 请求的网页已永久移动到新位置。 服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。</p>
<p>302 （临时移动） 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</p>
<p>303 （查看其他位置） 请求者应当对不同的位置使用单独的 GET 请求来检索响应时，服务器返回此代码。</p>
<p>304 （未修改） 自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容。</p>
<p>305 （使用代理） 请求者只能使用代理访问请求的网页。 如果服务器返回此响应，还表示请求者应使用代理。</p>
<p>307 （临时重定向） 服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</p>
<h3 id="4xx（请求错误）">4xx（请求错误）</h3><p>这些状态代码表示请求可能出错，妨碍了服务器的处理。</p>
<p> 代码 说明 </p>
<p>400 （错误请求） 服务器不理解请求的语法。</p>
<p>401 （未授权） 请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。</p>
<p>403 （禁止） 服务器拒绝请求。</p>
<p>404 （未找到） 服务器找不到请求的网页。</p>
<p>405 （方法禁用） 禁用请求中指定的方法。</p>
<p>406 （不接受） 无法使用请求的内容特性响应请求的网页。</p>
<p>407 （需要代理授权） 此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理。</p>
<p>408 （请求超时） 服务器等候请求时发生超时。</p>
<p>409 （冲突） 服务器在完成请求时发生冲突。 服务器必须在响应中包含有关冲突的信息。</p>
<p>410 （已删除） 如果请求的资源已永久删除，服务器就会返回此响应。</p>
<p>411 （需要有效长度） 服务器不接受不含有效内容长度标头字段的请求。</p>
<p>412 （未满足前提条件） 服务器未满足请求者在请求中设置的其中一个前提条件。</p>
<p>413 （请求实体过大） 服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。</p>
<p>414 （请求的 URI 过长） 请求的 URI（通常为网址）过长，服务器无法处理。</p>
<p>415 （不支持的媒体类型） 请求的格式不受请求页面的支持。</p>
<p>416 （请求范围不符合要求） 如果页面无法提供请求的范围，则服务器会返回此状态代码。</p>
<p>417 （未满足期望值） 服务器未满足”期望”请求标头字段的要求。</p>
<h3 id="5xx（服务器错误）">5xx（服务器错误）</h3><p>这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。</p>
<p> 代码 说明<br>500 （服务器内部错误） 服务器遇到错误，无法完成请求。</p>
<p>501 （尚未实施） 服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。</p>
<p>502 （错误网关） 服务器作为网关或代理，从上游服务器收到无效响应。</p>
<p>503 （服务不可用） 服务器目前无法使用（由于超载或停机维护）。 通常，这只是暂时状态。</p>
<p>504 （网关超时） 服务器作为网关或代理，但是没有及时从上游服务器收到请求。</p>
<p>505 （HTTP 版本不受支持） 服务器不支持请求中所用的 HTTP 协议版本。</p>
<p>【收集自网络】</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>###HTTP状态码</p>
<p>HTTP状态码（HTTP Status Code）是用以表示网页服务器HTTP响应状态的 3 位数字代码。</p>
<h3 id="0（无法访问）">0（无法访问）</h3>]]>
    
    </summary>
    
      <category term="Http" scheme="http://giscafer.com/tags/Http/"/>
    
      <category term="Http" scheme="http://giscafer.com/categories/Http/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于Hexo博客备份]]></title>
    <link href="http://giscafer.com/2014/04/28/hexo-backup/"/>
    <id>http://giscafer.com/2014/04/28/hexo-backup/</id>
    <published>2014-04-28T07:35:41.000Z</published>
    <updated>2015-10-18T04:46:18.234Z</updated>
    <content type="html"><![CDATA[<p>博客搭建几天了，这个静态博客框架使用感觉不错，一开始还是觉得更新博文比较麻烦，但是了解了<br>markdown的编辑器使用后，排版简单，另外是静态博客不需要数据库，纯粹的页面托管，可以放到github等网站。</p>
<p><a href="http://www.oschina.net/news/50322/markdown-editors-and-tools" target="_blank" rel="external">markdown编辑器推荐</a></p>
<p>因为hexo博客是本地更新博文，所以我想，要是本地<code>_posts</code>文件被删除了，或者根目录下的<code>source</code>和<code>theme</code>这些文件都丢了，是不是玩完了？所以要做好备份<br>本质上，Hexo是将本地的md文件编译成静态文件上传到github上（或者其他），所以建议是将本地的整个Hexo项目（blog）原件同步提交到github或者其他代码托管的站点，或者网盘！</p>
<p>更好的办法是，使用<a href="https://github.com/coneycode/hexo-git-backup" target="_blank" rel="external">hexo-git-backup</a>插件备份<br><br></p>
<hr>
<p><em>To the world you may be one person but to one person you may be the world.</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>博客搭建几天了，这个静态博客框架使用感觉不错，一开始还是觉得更新博文比较麻烦，但是了解了<br>markdown的编辑器使用后，排版简单，另外是静态博客不需要数据库，纯粹的页面托管，可以放到github等网站。</p>
<p><a href="http://www.osch]]>
    </summary>
    
      <category term="Hexo" scheme="http://giscafer.com/tags/Hexo/"/>
    
      <category term="Hexo" scheme="http://giscafer.com/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo静态博客搭建教程[2]]]></title>
    <link href="http://giscafer.com/2014/04/27/hexo-to-gitcafe_course/"/>
    <id>http://giscafer.com/2014/04/27/hexo-to-gitcafe_course/</id>
    <published>2014-04-27T09:35:41.000Z</published>
    <updated>2015-09-03T11:22:33.475Z</updated>
    <content type="html"><![CDATA[<p>##将Hexo本地博客，托管到gitcafe教程</p>
<p>###（1）注册<a href="http://gitcafe.com/signup?invited_by=giscafe" target="_blank" rel="external">gitcafe</a>账号</p>
<p>首先注册gitcafe账号，然后登陆到gitcafe，在个人首页左下角处，新建一个项目<br><img src="http://giscafer.github.io/static/img/hexo_course_08.jpg" alt=""></p>
<a id="more"></a>
<p>###（2）填写好项目信息：</p>
<p><img src="http://giscafer.github.io/static/img/hexo_course_09.jpg" alt=""></p>
<p>###（3）进入账户设置：</p>
<p><img src="http://giscafer.github.io/static/img/hexo_course_11.jpg" alt=""></p>
<p>###（4）添加SSH公匙：</p>
<p><img src="http://giscafer.github.io/static/img/hexo_course_12.jpg" alt=""></p>
<p>###（5）公匙获取方法：</p>
<blockquote>
<p>$ clip &lt; ~/.ssh/id_rsa.pub</p>
<p>  复制公匙到剪切板</p>
</blockquote>
<p>第一次使用的朋友没有公匙请看官方创建官方教程<a href="https://help.github.com/articles/generating-ssh-keys" target="_blank" rel="external">Generating SSH Keys</a></p>
<p>将复制的公式粘贴到gitcafe账户设置处的SSH公匙里边，保存即可！</p>
<p>打开博客根目录下的_config.yml文件，设置<br>将最后的“# Deployment”设置选项设置为如下：</p>
<pre><code><span class="attribute">deploy</span>:
  <span class="attribute">type</span>: github
  <span class="attribute">repository</span>: git<span class="variable">@gitcafe</span>.<span class="attribute">com</span>:giscafe/giscafe.git
  <span class="attribute">branch</span>: master 
</code></pre><p>这里的repository改为自己的Git地址，获取方法见图：</p>
<p><img src="http://giscafer.github.io/static/img/hexo_course_13.jpg" alt=""></p>
<p>保存，运行以下命令：</p>
<p>$hexo generate</p>
<p>$hexo deploy</p>
<p>这样即可将博客文件部署到gitcafe了，生成的静态文件会上传到gitcafe项目的master分支里边。<br>使用$ hexo doploy命令需要输入密码，就是上边<a href="https://help.github.com/articles/generating-ssh-keys" target="_blank" rel="external">Generating SSH Keys</a> 教程里边设置SSH时需要的密码。</p>
<p>###PS:</p>
<p>首次使用git的时候都需要提交一下自己的user_name和user_email</p>
<p>下面的命令将修改/home/[username]/.gitconfig文件，也就是说下面的配置只对每一个ssh的用户可见，所以每个人都需要做。</p>
<p>提交代码的log里面会显示提交者的信息:</p>
<pre><code><span class="tag">git</span> <span class="tag">config</span> —<span class="tag">global</span> <span class="tag">user</span><span class="class">.name</span> <span class="attr_selector">[username]</span>
<span class="tag">git</span> <span class="tag">config</span> —<span class="tag">global</span> <span class="tag">user</span><span class="class">.email</span> <span class="attr_selector">[email]</span>
</code></pre><p><strong>deploy完成后，在浏览器输入gitcafe送的二级域名即可进入了，比如我的是<a href="http://giscafer.github.io" target="_blank" rel="external">http://giscafer.github.io</a></strong></p>
<p><strong>就是“项目名.gitcafe.com”</strong></p>
<p>==========================</p>
<p>Author: <a href="http://weibo.com/laohoubin" target="_blank" rel="external">@勞黑炭要好好好学习</a></p>
<p>2014 年 04月 29日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>##将Hexo本地博客，托管到gitcafe教程</p>
<p>###（1）注册<a href="http://gitcafe.com/signup?invited_by=giscafe">gitcafe</a>账号</p>
<p>首先注册gitcafe账号，然后登陆到gitcafe，在个人首页左下角处，新建一个项目<br><img src="http://giscafer.github.io/static/img/hexo_course_08.jpg" alt=""></p>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://giscafer.com/tags/Hexo/"/>
    
      <category term="Hexo" scheme="http://giscafer.com/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo博客配置文件]]></title>
    <link href="http://giscafer.com/2014/04/27/hexo-config-setting/"/>
    <id>http://giscafer.com/2014/04/27/hexo-config-setting/</id>
    <published>2014-04-27T07:35:41.000Z</published>
    <updated>2015-10-15T16:19:39.576Z</updated>
    <content type="html"><![CDATA[<p>hexo博客配置文件位置：根目录下的<code>_config.yml</code>文件。</p>
<p>hexo博客安装完成后所有都是默认的，更改需要纯手工修改配置文件，包括修改博客名称等内容，下边是我的配置文件</p>
<a id="more"></a>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: http://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/tommy351/hexo/</span><br><span class="line"></span><br><span class="line"># Site 站点信息配置</span><br><span class="line">title: Giscafe's blog #站点名 </span><br><span class="line">subtitle:  A cafe about GIS #副标题，站点左上角</span><br><span class="line">description: 博客取名为giscafe，意为一个学习gis的咖啡馆，在这里分享一些有关Web开发或者是GIS学习相关的文章 #描述站点，SEO用</span><br><span class="line">author: giscafe #在站点左下角作者显示</span><br><span class="line">email: #你的联系邮箱</span><br><span class="line">language: zh-CN #中文</span><br><span class="line"></span><br><span class="line"># URL域名绑定设置</span><br><span class="line">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span><br><span class="line">url: http://gisren.com</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line"></span><br><span class="line"># Directory</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: public</span><br><span class="line"></span><br><span class="line"># Writing 文章配置</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post</span><br><span class="line">auto_spacing: false # Add spaces between asian characters and western characters</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">max_open_file: 100</span><br><span class="line">multi_thread: true</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">post_asset_folder: false</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"># Category &amp; Tag 默认分类</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Archives 归档设置</span><br><span class="line">## 2: Enable pagination 可分页，全文显示</span><br><span class="line">## 1: Disable pagination 无分页，表示只有标题</span><br><span class="line">## 0: Fully Disable</span><br><span class="line">archive: 1</span><br><span class="line">category: 1</span><br><span class="line">tag: 1</span><br><span class="line"></span><br><span class="line"># Server 服务配置</span><br><span class="line">## Hexo uses Connect as a server</span><br><span class="line">## You can customize the logger format as defined in</span><br><span class="line">## http://www.senchalabs.org/connect/logger.html</span><br><span class="line">port: 4000	</span><br><span class="line">server_ip: 0.0.0.0</span><br><span class="line">logger: false</span><br><span class="line">logger_format:</span><br><span class="line"></span><br><span class="line"># Date / Time format</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: MMM D YYYY</span><br><span class="line">time_format: H:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination每页显示文章数</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10 #默认是10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Disqus 插件</span><br><span class="line">disqus_shortname:</span><br><span class="line"></span><br><span class="line"># Extensions 主题和插件</span><br><span class="line">## Plugins: https://github.com/tommy351/hexo/wiki/Plugins</span><br><span class="line">## Themes: https://github.com/tommy351/hexo/wiki/Themes</span><br><span class="line">theme: pacman</span><br><span class="line">exclude_generator:</span><br><span class="line">plugins:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line">- hexo-generator-sitemap</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Markdown</span><br><span class="line">## https://github.com/chjj/marked</span><br><span class="line">markdown:</span><br><span class="line">  gfm: true</span><br><span class="line">  pedantic: false</span><br><span class="line">  sanitize: false</span><br><span class="line">  tables: true</span><br><span class="line">  breaks: true</span><br><span class="line">  smartLists: true</span><br><span class="line">  smartypants: true</span><br><span class="line"></span><br><span class="line"># Stylus</span><br><span class="line">stylus:</span><br><span class="line">  compress: true</span><br><span class="line"></span><br><span class="line"># Deployment 部署配置 从下边可以看出部署在了gifcafe</span><br><span class="line">## Docs: http://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: github</span><br><span class="line">  repository: git@gitcafe.com:giscafe/giscafe.git</span><br><span class="line">  branch: gitcafe-pages #master</span><br></pre></td></tr></table></figure>
<p>==========================</p>
<p>这些在<a href="http://hexo.io/docs" target="_blank" rel="external">Hexo documentation</a>里边都有详细介绍。</p>
<p>设置好后，<br>hexo g和hexo d后就可以看到效果了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>hexo博客配置文件位置：根目录下的<code>_config.yml</code>文件。</p>
<p>hexo博客安装完成后所有都是默认的，更改需要纯手工修改配置文件，包括修改博客名称等内容，下边是我的配置文件</p>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://giscafer.com/tags/Hexo/"/>
    
      <category term="Hexo" scheme="http://giscafer.com/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo静态博客搭建教程[1]]]></title>
    <link href="http://giscafer.com/2014/04/27/hexo-build-course01/"/>
    <id>http://giscafer.com/2014/04/27/hexo-build-course01/</id>
    <published>2014-04-27T07:35:41.000Z</published>
    <updated>2015-10-18T05:08:01.108Z</updated>
    <content type="html"><![CDATA[<p>###Hexo的介绍用一句话即可：</p>
<p><strong>A fast, simple &amp; powerful blog framework,powered by Node.js</strong></p>
<p>Hexo是一个基于Node.js快而轻的强大博客框架，Hexo所生成的网页都是静态的，所以说他轻而快那是必然的，目前可以将其托管到<code>gitcafe</code>(国内）,<code>github</code>和<code>heroku</code>（国外）。giscafe’s bolg托管在<code>gitcafe</code>，理由简单，两个名称很像，O(∩_∩)O哈哈哈~<br>Hexo作者来自台湾：<a href="https://github.com/tommy351/hexo" target="_blank" rel="external">@tommy351</a></p>
<p>Hexo搭建教程官方的帮助文档很详细，查看官方版版主文档请移步：<a href="http://hexo.io/docs/" target="_blank" rel="external">Hexo Documentation</a></p>
<a id="more"></a>
<p>下边介绍一下如何在gitcafe上搭建Hexo博客：<br>首先整体步骤有几个：</p>
<blockquote>
<ul>
<li><strong>下载Git和Nodejs安装到电脑上</strong>，我使用的是<a href="http://pan.baidu.com/s/1o6LQINK" target="_blank" rel="external">Git</a>（版本为1.9.2）和<a href="http://pan.baidu.com/s/1o6LQINK" target="_blank" rel="external">Node.js</a>（版本为Win7 32位），建议到<a href="http://git-scm.com/" target="_blank" rel="external">Git</a>和<a href="http://nodejs.org/" target="_blank" rel="external">Nodejs</a>官网下载适合自己的版本</li>
<li><strong>注册<a href="http://gitcafe.com/signup?invited_by=giscafe" target="_blank" rel="external">gitcafe</a>账号</strong></li>
<li><strong>安装Hexo程序</strong></li>
<li><strong>博客配置托管到gitcafe</strong></li>
</ul>
</blockquote>
<p>###（1）下载Git和Nodejs安装到电脑上</p>
<p>到<a href="http://git-scm.com/" target="_blank" rel="external">Git</a>和<a href="http://nodejs.org/" target="_blank" rel="external">Nodejs</a>官网下载适合自己电脑的版本后安装，更改自己想要安装的位置，其他设置默认即可，安装很简单。这里不介绍，安装成功会多这两个：<br><img src="http://giscafer.github.io/static/img/hexo_course_01.jpg" alt=""></p>
<p>###（2）新建目录</p>
<p>在自己喜欢的一个目录下新建一个目录，命名自定义，这里我命名为<code>hexo</code>,在这个文件夹内右键》选择<code>Git Bash</code>命令，会打开如图窗口<br><img src="http://giscafer.github.io/static/img/hexo_course_02.jpg" alt=""></p>
<p>这就是传说中的Git命令窗口，更多关于Git的命令使用和教程可以网上搜索或者到官网学习。</p>
<p>###（3）下载安装Hexo</p>
<pre><code>$ npm <span class="operator"><span class="keyword">install</span> hexo -<span class="keyword">g</span></span>
</code></pre><p>使用上面的命令来下载安装Hexo程序</p>
<p>###（4）创建博客文件夹</p>
<pre><code>$ hexo init <span class="keyword">blog </span>&amp;&amp; cd <span class="keyword">blog</span>
</code></pre><p>或</p>
<pre><code><span class="variable">$ </span>hexo init
</code></pre><p>来创建博客目录，<code>$ hexo init blog &amp;&amp; cd blog</code>是在根目录下创建一个blog文件夹再创建博客，<code>$ hexo init</code>则为直接在根目录创建博客文件夹：<br><img src="http://giscafer.github.io/static/img/hexo_course_04.jpg" alt=""><br>最后文件夹如图：<br><img src="http://giscafer.github.io/static/img/hexo_course_03.jpg" alt=""></p>
<p><code>PS:</code>下边是Hexo在Git里搭建的几个日后常用命令<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate      <span class="comment">//可以简写为$hexo g,本地文件更改后都需要执行一次，相当于提交更改</span></span><br><span class="line"></span><br><span class="line">$ hexo server        <span class="comment">//可以简写为$hexo s，本地服务启动，启动后可以在浏览器地址输入"localhost:4000"来访问博客，用于本地调试，满意了再提交</span></span><br><span class="line"></span><br><span class="line">$ hexo deploy        <span class="comment">//可以简写为$hexo d，提交代码到空间（托管处）</span></span><br></pre></td></tr></table></figure></p>
<p>###（5）本地博客搭建完成<br>在git命令窗口中使用以下两个命令：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$hexo generate或hexo g</span><br><span class="line">$hexo server或hexo s</span><br></pre></td></tr></table></figure></p>
<p><img src="http://giscafer.github.io/static/img/hexo_course_05.jpg" alt="hexo generate"><br><img src="http://giscafer.github.io/static/img/hexo_course_06.jpg" alt="hexo server"><br><code>[info] Hexo is running at http://localhost:4000/. Press Ctrl+C to stop</code><br>浏览器输入<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 即可打开刚建好的Hexo博客了。<br><img src="http://giscafer.github.io/static/img/hexo_course_07.jpg" alt="Hello World"><br><strong>按<code>Ctrl+C</code>可以停止程序</strong></p>
<p><em>通过以上几个步骤即可完成Hexo博客的本地搭建，托管gitcafe教程见下一篇</em></p>
<p>作者 <a href="http://weibo.com/laohoubin" target="_blank" rel="external">@勞黑炭要好好好学习</a><br>2014 年 04月 28日    </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>###Hexo的介绍用一句话即可：</p>
<p><strong>A fast, simple &amp; powerful blog framework,powered by Node.js</strong></p>
<p>Hexo是一个基于Node.js快而轻的强大博客框架，Hexo所生成的网页都是静态的，所以说他轻而快那是必然的，目前可以将其托管到<code>gitcafe</code>(国内）,<code>github</code>和<code>heroku</code>（国外）。giscafe’s bolg托管在<code>gitcafe</code>，理由简单，两个名称很像，O(∩_∩)O哈哈哈~<br>Hexo作者来自台湾：<a href="https://github.com/tommy351/hexo">@tommy351</a></p>
<p>Hexo搭建教程官方的帮助文档很详细，查看官方版版主文档请移步：<a href="http://hexo.io/docs/">Hexo Documentation</a></p>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://giscafer.com/tags/Hexo/"/>
    
      <category term="Hexo教程" scheme="http://giscafer.com/tags/Hexo%E6%95%99%E7%A8%8B/"/>
    
      <category term="Hexo" scheme="http://giscafer.com/categories/Hexo/"/>
    
  </entry>
  
</feed>
